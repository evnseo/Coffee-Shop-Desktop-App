'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DB_FPDataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DB_FPDataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableTBL_ADMIN As TBL_ADMINDataTable
    
    Private tableTBL_DETAILPEMBELIAN As TBL_DETAILPEMBELIANDataTable
    
    Private tableTBL_DETAILPENJUALAN As TBL_DETAILPENJUALANDataTable
    
    Private tableTBL_MENUPRODUK As TBL_MENUPRODUKDataTable
    
    Private tableTBL_PEMBELIAN As TBL_PEMBELIANDataTable
    
    Private tableTBL_PENJUALAN As TBL_PENJUALANDataTable
    
    Private tableTBL_SUPPLIER As TBL_SUPPLIERDataTable
    
    Private relationFK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK As Global.System.Data.DataRelation
    
    Private relationFK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK As Global.System.Data.DataRelation
    
    Private relationFK_TBL_PEMBELIAN_TBL_ADMIN As Global.System.Data.DataRelation
    
    Private relationFK_TBL_PEMBELIAN_TBL_SUPPLIER As Global.System.Data.DataRelation
    
    Private relationFK_TBL_PENJUALAN_TBL_ADMIN As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("TBL_ADMIN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_ADMINDataTable(ds.Tables("TBL_ADMIN")))
            End If
            If (Not (ds.Tables("TBL_DETAILPEMBELIAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_DETAILPEMBELIANDataTable(ds.Tables("TBL_DETAILPEMBELIAN")))
            End If
            If (Not (ds.Tables("TBL_DETAILPENJUALAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_DETAILPENJUALANDataTable(ds.Tables("TBL_DETAILPENJUALAN")))
            End If
            If (Not (ds.Tables("TBL_MENUPRODUK")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_MENUPRODUKDataTable(ds.Tables("TBL_MENUPRODUK")))
            End If
            If (Not (ds.Tables("TBL_PEMBELIAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_PEMBELIANDataTable(ds.Tables("TBL_PEMBELIAN")))
            End If
            If (Not (ds.Tables("TBL_PENJUALAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_PENJUALANDataTable(ds.Tables("TBL_PENJUALAN")))
            End If
            If (Not (ds.Tables("TBL_SUPPLIER")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_SUPPLIERDataTable(ds.Tables("TBL_SUPPLIER")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBL_ADMIN() As TBL_ADMINDataTable
        Get
            Return Me.tableTBL_ADMIN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBL_DETAILPEMBELIAN() As TBL_DETAILPEMBELIANDataTable
        Get
            Return Me.tableTBL_DETAILPEMBELIAN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBL_DETAILPENJUALAN() As TBL_DETAILPENJUALANDataTable
        Get
            Return Me.tableTBL_DETAILPENJUALAN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBL_MENUPRODUK() As TBL_MENUPRODUKDataTable
        Get
            Return Me.tableTBL_MENUPRODUK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBL_PEMBELIAN() As TBL_PEMBELIANDataTable
        Get
            Return Me.tableTBL_PEMBELIAN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBL_PENJUALAN() As TBL_PENJUALANDataTable
        Get
            Return Me.tableTBL_PENJUALAN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TBL_SUPPLIER() As TBL_SUPPLIERDataTable
        Get
            Return Me.tableTBL_SUPPLIER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DB_FPDataSet1 = CType(MyBase.Clone,DB_FPDataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("TBL_ADMIN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_ADMINDataTable(ds.Tables("TBL_ADMIN")))
            End If
            If (Not (ds.Tables("TBL_DETAILPEMBELIAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_DETAILPEMBELIANDataTable(ds.Tables("TBL_DETAILPEMBELIAN")))
            End If
            If (Not (ds.Tables("TBL_DETAILPENJUALAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_DETAILPENJUALANDataTable(ds.Tables("TBL_DETAILPENJUALAN")))
            End If
            If (Not (ds.Tables("TBL_MENUPRODUK")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_MENUPRODUKDataTable(ds.Tables("TBL_MENUPRODUK")))
            End If
            If (Not (ds.Tables("TBL_PEMBELIAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_PEMBELIANDataTable(ds.Tables("TBL_PEMBELIAN")))
            End If
            If (Not (ds.Tables("TBL_PENJUALAN")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_PENJUALANDataTable(ds.Tables("TBL_PENJUALAN")))
            End If
            If (Not (ds.Tables("TBL_SUPPLIER")) Is Nothing) Then
                MyBase.Tables.Add(New TBL_SUPPLIERDataTable(ds.Tables("TBL_SUPPLIER")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableTBL_ADMIN = CType(MyBase.Tables("TBL_ADMIN"),TBL_ADMINDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBL_ADMIN) Is Nothing) Then
                Me.tableTBL_ADMIN.InitVars
            End If
        End If
        Me.tableTBL_DETAILPEMBELIAN = CType(MyBase.Tables("TBL_DETAILPEMBELIAN"),TBL_DETAILPEMBELIANDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBL_DETAILPEMBELIAN) Is Nothing) Then
                Me.tableTBL_DETAILPEMBELIAN.InitVars
            End If
        End If
        Me.tableTBL_DETAILPENJUALAN = CType(MyBase.Tables("TBL_DETAILPENJUALAN"),TBL_DETAILPENJUALANDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBL_DETAILPENJUALAN) Is Nothing) Then
                Me.tableTBL_DETAILPENJUALAN.InitVars
            End If
        End If
        Me.tableTBL_MENUPRODUK = CType(MyBase.Tables("TBL_MENUPRODUK"),TBL_MENUPRODUKDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBL_MENUPRODUK) Is Nothing) Then
                Me.tableTBL_MENUPRODUK.InitVars
            End If
        End If
        Me.tableTBL_PEMBELIAN = CType(MyBase.Tables("TBL_PEMBELIAN"),TBL_PEMBELIANDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBL_PEMBELIAN) Is Nothing) Then
                Me.tableTBL_PEMBELIAN.InitVars
            End If
        End If
        Me.tableTBL_PENJUALAN = CType(MyBase.Tables("TBL_PENJUALAN"),TBL_PENJUALANDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBL_PENJUALAN) Is Nothing) Then
                Me.tableTBL_PENJUALAN.InitVars
            End If
        End If
        Me.tableTBL_SUPPLIER = CType(MyBase.Tables("TBL_SUPPLIER"),TBL_SUPPLIERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTBL_SUPPLIER) Is Nothing) Then
                Me.tableTBL_SUPPLIER.InitVars
            End If
        End If
        Me.relationFK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK = Me.Relations("FK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK")
        Me.relationFK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK = Me.Relations("FK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK")
        Me.relationFK_TBL_PEMBELIAN_TBL_ADMIN = Me.Relations("FK_TBL_PEMBELIAN_TBL_ADMIN")
        Me.relationFK_TBL_PEMBELIAN_TBL_SUPPLIER = Me.Relations("FK_TBL_PEMBELIAN_TBL_SUPPLIER")
        Me.relationFK_TBL_PENJUALAN_TBL_ADMIN = Me.Relations("FK_TBL_PENJUALAN_TBL_ADMIN")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DB_FPDataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DB_FPDataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableTBL_ADMIN = New TBL_ADMINDataTable()
        MyBase.Tables.Add(Me.tableTBL_ADMIN)
        Me.tableTBL_DETAILPEMBELIAN = New TBL_DETAILPEMBELIANDataTable()
        MyBase.Tables.Add(Me.tableTBL_DETAILPEMBELIAN)
        Me.tableTBL_DETAILPENJUALAN = New TBL_DETAILPENJUALANDataTable()
        MyBase.Tables.Add(Me.tableTBL_DETAILPENJUALAN)
        Me.tableTBL_MENUPRODUK = New TBL_MENUPRODUKDataTable()
        MyBase.Tables.Add(Me.tableTBL_MENUPRODUK)
        Me.tableTBL_PEMBELIAN = New TBL_PEMBELIANDataTable()
        MyBase.Tables.Add(Me.tableTBL_PEMBELIAN)
        Me.tableTBL_PENJUALAN = New TBL_PENJUALANDataTable()
        MyBase.Tables.Add(Me.tableTBL_PENJUALAN)
        Me.tableTBL_SUPPLIER = New TBL_SUPPLIERDataTable()
        MyBase.Tables.Add(Me.tableTBL_SUPPLIER)
        Me.relationFK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK = New Global.System.Data.DataRelation("FK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK", New Global.System.Data.DataColumn() {Me.tableTBL_MENUPRODUK.KodeMenuColumn}, New Global.System.Data.DataColumn() {Me.tableTBL_DETAILPEMBELIAN.KodeMenuColumn}, false)
        Me.Relations.Add(Me.relationFK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK)
        Me.relationFK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK = New Global.System.Data.DataRelation("FK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK", New Global.System.Data.DataColumn() {Me.tableTBL_MENUPRODUK.KodeMenuColumn}, New Global.System.Data.DataColumn() {Me.tableTBL_DETAILPENJUALAN.KodeMenuColumn}, false)
        Me.Relations.Add(Me.relationFK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK)
        Me.relationFK_TBL_PEMBELIAN_TBL_ADMIN = New Global.System.Data.DataRelation("FK_TBL_PEMBELIAN_TBL_ADMIN", New Global.System.Data.DataColumn() {Me.tableTBL_ADMIN.KodeAdminColumn}, New Global.System.Data.DataColumn() {Me.tableTBL_PEMBELIAN.KodeAdminColumn}, false)
        Me.Relations.Add(Me.relationFK_TBL_PEMBELIAN_TBL_ADMIN)
        Me.relationFK_TBL_PEMBELIAN_TBL_SUPPLIER = New Global.System.Data.DataRelation("FK_TBL_PEMBELIAN_TBL_SUPPLIER", New Global.System.Data.DataColumn() {Me.tableTBL_SUPPLIER.KodeSupplierColumn}, New Global.System.Data.DataColumn() {Me.tableTBL_PEMBELIAN.KodeSupplierColumn}, false)
        Me.Relations.Add(Me.relationFK_TBL_PEMBELIAN_TBL_SUPPLIER)
        Me.relationFK_TBL_PENJUALAN_TBL_ADMIN = New Global.System.Data.DataRelation("FK_TBL_PENJUALAN_TBL_ADMIN", New Global.System.Data.DataColumn() {Me.tableTBL_ADMIN.KodeAdminColumn}, New Global.System.Data.DataColumn() {Me.tableTBL_PENJUALAN.KodeAdminColumn}, false)
        Me.Relations.Add(Me.relationFK_TBL_PENJUALAN_TBL_ADMIN)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTBL_ADMIN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTBL_DETAILPEMBELIAN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTBL_DETAILPENJUALAN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTBL_MENUPRODUK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTBL_PEMBELIAN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTBL_PENJUALAN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTBL_SUPPLIER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TBL_ADMINRowChangeEventHandler(ByVal sender As Object, ByVal e As TBL_ADMINRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TBL_DETAILPEMBELIANRowChangeEventHandler(ByVal sender As Object, ByVal e As TBL_DETAILPEMBELIANRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TBL_DETAILPENJUALANRowChangeEventHandler(ByVal sender As Object, ByVal e As TBL_DETAILPENJUALANRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TBL_MENUPRODUKRowChangeEventHandler(ByVal sender As Object, ByVal e As TBL_MENUPRODUKRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TBL_PEMBELIANRowChangeEventHandler(ByVal sender As Object, ByVal e As TBL_PEMBELIANRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TBL_PENJUALANRowChangeEventHandler(ByVal sender As Object, ByVal e As TBL_PENJUALANRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TBL_SUPPLIERRowChangeEventHandler(ByVal sender As Object, ByVal e As TBL_SUPPLIERRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBL_ADMINDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBL_ADMINRow)
        
        Private columnKodeAdmin As Global.System.Data.DataColumn
        
        Private columnNamaAdmin As Global.System.Data.DataColumn
        
        Private columnPassAdmin As Global.System.Data.DataColumn
        
        Private columnLevelAdmin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBL_ADMIN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NamaAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNamaAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PassAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property LevelAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLevelAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBL_ADMINRow
            Get
                Return CType(Me.Rows(index),TBL_ADMINRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_ADMINRowChanging As TBL_ADMINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_ADMINRowChanged As TBL_ADMINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_ADMINRowDeleting As TBL_ADMINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_ADMINRowDeleted As TBL_ADMINRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTBL_ADMINRow(ByVal row As TBL_ADMINRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTBL_ADMINRow(ByVal KodeAdmin As String, ByVal NamaAdmin As String, ByVal PassAdmin As String, ByVal LevelAdmin As String) As TBL_ADMINRow
            Dim rowTBL_ADMINRow As TBL_ADMINRow = CType(Me.NewRow,TBL_ADMINRow)
            Dim columnValuesArray() As Object = New Object() {KodeAdmin, NamaAdmin, PassAdmin, LevelAdmin}
            rowTBL_ADMINRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBL_ADMINRow)
            Return rowTBL_ADMINRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByKodeAdmin(ByVal KodeAdmin As String) As TBL_ADMINRow
            Return CType(Me.Rows.Find(New Object() {KodeAdmin}),TBL_ADMINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBL_ADMINDataTable = CType(MyBase.Clone,TBL_ADMINDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBL_ADMINDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKodeAdmin = MyBase.Columns("KodeAdmin")
            Me.columnNamaAdmin = MyBase.Columns("NamaAdmin")
            Me.columnPassAdmin = MyBase.Columns("PassAdmin")
            Me.columnLevelAdmin = MyBase.Columns("LevelAdmin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKodeAdmin = New Global.System.Data.DataColumn("KodeAdmin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeAdmin)
            Me.columnNamaAdmin = New Global.System.Data.DataColumn("NamaAdmin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNamaAdmin)
            Me.columnPassAdmin = New Global.System.Data.DataColumn("PassAdmin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassAdmin)
            Me.columnLevelAdmin = New Global.System.Data.DataColumn("LevelAdmin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLevelAdmin)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnKodeAdmin}, true))
            Me.columnKodeAdmin.AllowDBNull = false
            Me.columnKodeAdmin.Unique = true
            Me.columnKodeAdmin.MaxLength = 6
            Me.columnNamaAdmin.MaxLength = 50
            Me.columnPassAdmin.MaxLength = 30
            Me.columnLevelAdmin.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTBL_ADMINRow() As TBL_ADMINRow
            Return CType(Me.NewRow,TBL_ADMINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBL_ADMINRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBL_ADMINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBL_ADMINRowChangedEvent) Is Nothing) Then
                RaiseEvent TBL_ADMINRowChanged(Me, New TBL_ADMINRowChangeEvent(CType(e.Row,TBL_ADMINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBL_ADMINRowChangingEvent) Is Nothing) Then
                RaiseEvent TBL_ADMINRowChanging(Me, New TBL_ADMINRowChangeEvent(CType(e.Row,TBL_ADMINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBL_ADMINRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBL_ADMINRowDeleted(Me, New TBL_ADMINRowChangeEvent(CType(e.Row,TBL_ADMINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBL_ADMINRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBL_ADMINRowDeleting(Me, New TBL_ADMINRowChangeEvent(CType(e.Row,TBL_ADMINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTBL_ADMINRow(ByVal row As TBL_ADMINRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBL_ADMINDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBL_DETAILPEMBELIANDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBL_DETAILPEMBELIANRow)
        
        Private columnNoBeli As Global.System.Data.DataColumn
        
        Private columnNamaBahan As Global.System.Data.DataColumn
        
        Private columnHargaBahan As Global.System.Data.DataColumn
        
        Private columnJumlahBeli As Global.System.Data.DataColumn
        
        Private columnSubtotal As Global.System.Data.DataColumn
        
        Private columnKodeMenu As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBL_DETAILPEMBELIAN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NoBeliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoBeli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NamaBahanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNamaBahan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HargaBahanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHargaBahan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property JumlahBeliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJumlahBeli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SubtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBL_DETAILPEMBELIANRow
            Get
                Return CType(Me.Rows(index),TBL_DETAILPEMBELIANRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPEMBELIANRowChanging As TBL_DETAILPEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPEMBELIANRowChanged As TBL_DETAILPEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPEMBELIANRowDeleting As TBL_DETAILPEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPEMBELIANRowDeleted As TBL_DETAILPEMBELIANRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTBL_DETAILPEMBELIANRow(ByVal row As TBL_DETAILPEMBELIANRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTBL_DETAILPEMBELIANRow(ByVal NoBeli As String, ByVal NamaBahan As String, ByVal HargaBahan As String, ByVal JumlahBeli As String, ByVal Subtotal As String, ByVal parentTBL_MENUPRODUKRowByFK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK As TBL_MENUPRODUKRow) As TBL_DETAILPEMBELIANRow
            Dim rowTBL_DETAILPEMBELIANRow As TBL_DETAILPEMBELIANRow = CType(Me.NewRow,TBL_DETAILPEMBELIANRow)
            Dim columnValuesArray() As Object = New Object() {NoBeli, NamaBahan, HargaBahan, JumlahBeli, Subtotal, Nothing}
            If (Not (parentTBL_MENUPRODUKRowByFK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK) Is Nothing) Then
                columnValuesArray(5) = parentTBL_MENUPRODUKRowByFK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK(0)
            End If
            rowTBL_DETAILPEMBELIANRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBL_DETAILPEMBELIANRow)
            Return rowTBL_DETAILPEMBELIANRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBL_DETAILPEMBELIANDataTable = CType(MyBase.Clone,TBL_DETAILPEMBELIANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBL_DETAILPEMBELIANDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNoBeli = MyBase.Columns("NoBeli")
            Me.columnNamaBahan = MyBase.Columns("NamaBahan")
            Me.columnHargaBahan = MyBase.Columns("HargaBahan")
            Me.columnJumlahBeli = MyBase.Columns("JumlahBeli")
            Me.columnSubtotal = MyBase.Columns("Subtotal")
            Me.columnKodeMenu = MyBase.Columns("KodeMenu")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNoBeli = New Global.System.Data.DataColumn("NoBeli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoBeli)
            Me.columnNamaBahan = New Global.System.Data.DataColumn("NamaBahan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNamaBahan)
            Me.columnHargaBahan = New Global.System.Data.DataColumn("HargaBahan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHargaBahan)
            Me.columnJumlahBeli = New Global.System.Data.DataColumn("JumlahBeli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJumlahBeli)
            Me.columnSubtotal = New Global.System.Data.DataColumn("Subtotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubtotal)
            Me.columnKodeMenu = New Global.System.Data.DataColumn("KodeMenu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeMenu)
            Me.columnNoBeli.MaxLength = 10
            Me.columnNamaBahan.MaxLength = 50
            Me.columnHargaBahan.MaxLength = 50
            Me.columnJumlahBeli.MaxLength = 50
            Me.columnSubtotal.MaxLength = 50
            Me.columnKodeMenu.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTBL_DETAILPEMBELIANRow() As TBL_DETAILPEMBELIANRow
            Return CType(Me.NewRow,TBL_DETAILPEMBELIANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBL_DETAILPEMBELIANRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBL_DETAILPEMBELIANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBL_DETAILPEMBELIANRowChangedEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPEMBELIANRowChanged(Me, New TBL_DETAILPEMBELIANRowChangeEvent(CType(e.Row,TBL_DETAILPEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBL_DETAILPEMBELIANRowChangingEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPEMBELIANRowChanging(Me, New TBL_DETAILPEMBELIANRowChangeEvent(CType(e.Row,TBL_DETAILPEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBL_DETAILPEMBELIANRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPEMBELIANRowDeleted(Me, New TBL_DETAILPEMBELIANRowChangeEvent(CType(e.Row,TBL_DETAILPEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBL_DETAILPEMBELIANRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPEMBELIANRowDeleting(Me, New TBL_DETAILPEMBELIANRowChangeEvent(CType(e.Row,TBL_DETAILPEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTBL_DETAILPEMBELIANRow(ByVal row As TBL_DETAILPEMBELIANRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBL_DETAILPEMBELIANDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBL_DETAILPENJUALANDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBL_DETAILPENJUALANRow)
        
        Private columnNoJual As Global.System.Data.DataColumn
        
        Private columnKodeMenu As Global.System.Data.DataColumn
        
        Private columnNamaMenu As Global.System.Data.DataColumn
        
        Private columnHargaMenu As Global.System.Data.DataColumn
        
        Private columnJumlahJual As Global.System.Data.DataColumn
        
        Private columnSubTotal As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBL_DETAILPENJUALAN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NoJualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoJual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NamaMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNamaMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HargaMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHargaMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property JumlahJualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJumlahJual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SubTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBL_DETAILPENJUALANRow
            Get
                Return CType(Me.Rows(index),TBL_DETAILPENJUALANRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPENJUALANRowChanging As TBL_DETAILPENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPENJUALANRowChanged As TBL_DETAILPENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPENJUALANRowDeleting As TBL_DETAILPENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_DETAILPENJUALANRowDeleted As TBL_DETAILPENJUALANRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTBL_DETAILPENJUALANRow(ByVal row As TBL_DETAILPENJUALANRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTBL_DETAILPENJUALANRow(ByVal NoJual As String, ByVal parentTBL_MENUPRODUKRowByFK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK As TBL_MENUPRODUKRow, ByVal NamaMenu As String, ByVal HargaMenu As Integer, ByVal JumlahJual As Integer, ByVal SubTotal As Integer) As TBL_DETAILPENJUALANRow
            Dim rowTBL_DETAILPENJUALANRow As TBL_DETAILPENJUALANRow = CType(Me.NewRow,TBL_DETAILPENJUALANRow)
            Dim columnValuesArray() As Object = New Object() {NoJual, Nothing, NamaMenu, HargaMenu, JumlahJual, SubTotal}
            If (Not (parentTBL_MENUPRODUKRowByFK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK) Is Nothing) Then
                columnValuesArray(1) = parentTBL_MENUPRODUKRowByFK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK(0)
            End If
            rowTBL_DETAILPENJUALANRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBL_DETAILPENJUALANRow)
            Return rowTBL_DETAILPENJUALANRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBL_DETAILPENJUALANDataTable = CType(MyBase.Clone,TBL_DETAILPENJUALANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBL_DETAILPENJUALANDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNoJual = MyBase.Columns("NoJual")
            Me.columnKodeMenu = MyBase.Columns("KodeMenu")
            Me.columnNamaMenu = MyBase.Columns("NamaMenu")
            Me.columnHargaMenu = MyBase.Columns("HargaMenu")
            Me.columnJumlahJual = MyBase.Columns("JumlahJual")
            Me.columnSubTotal = MyBase.Columns("SubTotal")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNoJual = New Global.System.Data.DataColumn("NoJual", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoJual)
            Me.columnKodeMenu = New Global.System.Data.DataColumn("KodeMenu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeMenu)
            Me.columnNamaMenu = New Global.System.Data.DataColumn("NamaMenu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNamaMenu)
            Me.columnHargaMenu = New Global.System.Data.DataColumn("HargaMenu", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHargaMenu)
            Me.columnJumlahJual = New Global.System.Data.DataColumn("JumlahJual", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJumlahJual)
            Me.columnSubTotal = New Global.System.Data.DataColumn("SubTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubTotal)
            Me.columnNoJual.MaxLength = 10
            Me.columnKodeMenu.MaxLength = 6
            Me.columnNamaMenu.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTBL_DETAILPENJUALANRow() As TBL_DETAILPENJUALANRow
            Return CType(Me.NewRow,TBL_DETAILPENJUALANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBL_DETAILPENJUALANRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBL_DETAILPENJUALANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBL_DETAILPENJUALANRowChangedEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPENJUALANRowChanged(Me, New TBL_DETAILPENJUALANRowChangeEvent(CType(e.Row,TBL_DETAILPENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBL_DETAILPENJUALANRowChangingEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPENJUALANRowChanging(Me, New TBL_DETAILPENJUALANRowChangeEvent(CType(e.Row,TBL_DETAILPENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBL_DETAILPENJUALANRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPENJUALANRowDeleted(Me, New TBL_DETAILPENJUALANRowChangeEvent(CType(e.Row,TBL_DETAILPENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBL_DETAILPENJUALANRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBL_DETAILPENJUALANRowDeleting(Me, New TBL_DETAILPENJUALANRowChangeEvent(CType(e.Row,TBL_DETAILPENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTBL_DETAILPENJUALANRow(ByVal row As TBL_DETAILPENJUALANRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBL_DETAILPENJUALANDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBL_MENUPRODUKDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBL_MENUPRODUKRow)
        
        Private columnKodeMenu As Global.System.Data.DataColumn
        
        Private columnNamaMenu As Global.System.Data.DataColumn
        
        Private columnHargaMenu As Global.System.Data.DataColumn
        
        Private columnJumlahMenu As Global.System.Data.DataColumn
        
        Private columnStatusMenu As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBL_MENUPRODUK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NamaMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNamaMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HargaMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHargaMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property JumlahMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJumlahMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StatusMenuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusMenu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBL_MENUPRODUKRow
            Get
                Return CType(Me.Rows(index),TBL_MENUPRODUKRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_MENUPRODUKRowChanging As TBL_MENUPRODUKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_MENUPRODUKRowChanged As TBL_MENUPRODUKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_MENUPRODUKRowDeleting As TBL_MENUPRODUKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_MENUPRODUKRowDeleted As TBL_MENUPRODUKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTBL_MENUPRODUKRow(ByVal row As TBL_MENUPRODUKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTBL_MENUPRODUKRow(ByVal KodeMenu As String, ByVal NamaMenu As String, ByVal HargaMenu As Integer, ByVal JumlahMenu As Integer, ByVal StatusMenu As String) As TBL_MENUPRODUKRow
            Dim rowTBL_MENUPRODUKRow As TBL_MENUPRODUKRow = CType(Me.NewRow,TBL_MENUPRODUKRow)
            Dim columnValuesArray() As Object = New Object() {KodeMenu, NamaMenu, HargaMenu, JumlahMenu, StatusMenu}
            rowTBL_MENUPRODUKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBL_MENUPRODUKRow)
            Return rowTBL_MENUPRODUKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByKodeMenu(ByVal KodeMenu As String) As TBL_MENUPRODUKRow
            Return CType(Me.Rows.Find(New Object() {KodeMenu}),TBL_MENUPRODUKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBL_MENUPRODUKDataTable = CType(MyBase.Clone,TBL_MENUPRODUKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBL_MENUPRODUKDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKodeMenu = MyBase.Columns("KodeMenu")
            Me.columnNamaMenu = MyBase.Columns("NamaMenu")
            Me.columnHargaMenu = MyBase.Columns("HargaMenu")
            Me.columnJumlahMenu = MyBase.Columns("JumlahMenu")
            Me.columnStatusMenu = MyBase.Columns("StatusMenu")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKodeMenu = New Global.System.Data.DataColumn("KodeMenu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeMenu)
            Me.columnNamaMenu = New Global.System.Data.DataColumn("NamaMenu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNamaMenu)
            Me.columnHargaMenu = New Global.System.Data.DataColumn("HargaMenu", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHargaMenu)
            Me.columnJumlahMenu = New Global.System.Data.DataColumn("JumlahMenu", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJumlahMenu)
            Me.columnStatusMenu = New Global.System.Data.DataColumn("StatusMenu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusMenu)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnKodeMenu}, true))
            Me.columnKodeMenu.AllowDBNull = false
            Me.columnKodeMenu.Unique = true
            Me.columnKodeMenu.MaxLength = 6
            Me.columnNamaMenu.MaxLength = 50
            Me.columnStatusMenu.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTBL_MENUPRODUKRow() As TBL_MENUPRODUKRow
            Return CType(Me.NewRow,TBL_MENUPRODUKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBL_MENUPRODUKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBL_MENUPRODUKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBL_MENUPRODUKRowChangedEvent) Is Nothing) Then
                RaiseEvent TBL_MENUPRODUKRowChanged(Me, New TBL_MENUPRODUKRowChangeEvent(CType(e.Row,TBL_MENUPRODUKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBL_MENUPRODUKRowChangingEvent) Is Nothing) Then
                RaiseEvent TBL_MENUPRODUKRowChanging(Me, New TBL_MENUPRODUKRowChangeEvent(CType(e.Row,TBL_MENUPRODUKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBL_MENUPRODUKRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBL_MENUPRODUKRowDeleted(Me, New TBL_MENUPRODUKRowChangeEvent(CType(e.Row,TBL_MENUPRODUKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBL_MENUPRODUKRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBL_MENUPRODUKRowDeleting(Me, New TBL_MENUPRODUKRowChangeEvent(CType(e.Row,TBL_MENUPRODUKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTBL_MENUPRODUKRow(ByVal row As TBL_MENUPRODUKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBL_MENUPRODUKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBL_PEMBELIANDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBL_PEMBELIANRow)
        
        Private columnNoBeli As Global.System.Data.DataColumn
        
        Private columnTglBeli As Global.System.Data.DataColumn
        
        Private columnJamBeli As Global.System.Data.DataColumn
        
        Private columnTotalItem As Global.System.Data.DataColumn
        
        Private columnTotalBeli As Global.System.Data.DataColumn
        
        Private columnDibayar As Global.System.Data.DataColumn
        
        Private columnKembali As Global.System.Data.DataColumn
        
        Private columnKodeSupplier As Global.System.Data.DataColumn
        
        Private columnKodeAdmin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBL_PEMBELIAN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NoBeliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoBeli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TglBeliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTglBeli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property JamBeliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJamBeli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalItem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalBeliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalBeli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DibayarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDibayar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KembaliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKembali
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBL_PEMBELIANRow
            Get
                Return CType(Me.Rows(index),TBL_PEMBELIANRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PEMBELIANRowChanging As TBL_PEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PEMBELIANRowChanged As TBL_PEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PEMBELIANRowDeleting As TBL_PEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PEMBELIANRowDeleted As TBL_PEMBELIANRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTBL_PEMBELIANRow(ByVal row As TBL_PEMBELIANRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTBL_PEMBELIANRow(ByVal NoBeli As String, ByVal TglBeli As String, ByVal JamBeli As String, ByVal TotalItem As String, ByVal TotalBeli As String, ByVal Dibayar As String, ByVal Kembali As String, ByVal parentTBL_SUPPLIERRowByFK_TBL_PEMBELIAN_TBL_SUPPLIER As TBL_SUPPLIERRow, ByVal parentTBL_ADMINRowByFK_TBL_PEMBELIAN_TBL_ADMIN As TBL_ADMINRow) As TBL_PEMBELIANRow
            Dim rowTBL_PEMBELIANRow As TBL_PEMBELIANRow = CType(Me.NewRow,TBL_PEMBELIANRow)
            Dim columnValuesArray() As Object = New Object() {NoBeli, TglBeli, JamBeli, TotalItem, TotalBeli, Dibayar, Kembali, Nothing, Nothing}
            If (Not (parentTBL_SUPPLIERRowByFK_TBL_PEMBELIAN_TBL_SUPPLIER) Is Nothing) Then
                columnValuesArray(7) = parentTBL_SUPPLIERRowByFK_TBL_PEMBELIAN_TBL_SUPPLIER(0)
            End If
            If (Not (parentTBL_ADMINRowByFK_TBL_PEMBELIAN_TBL_ADMIN) Is Nothing) Then
                columnValuesArray(8) = parentTBL_ADMINRowByFK_TBL_PEMBELIAN_TBL_ADMIN(0)
            End If
            rowTBL_PEMBELIANRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBL_PEMBELIANRow)
            Return rowTBL_PEMBELIANRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByNoBeli(ByVal NoBeli As String) As TBL_PEMBELIANRow
            Return CType(Me.Rows.Find(New Object() {NoBeli}),TBL_PEMBELIANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBL_PEMBELIANDataTable = CType(MyBase.Clone,TBL_PEMBELIANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBL_PEMBELIANDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNoBeli = MyBase.Columns("NoBeli")
            Me.columnTglBeli = MyBase.Columns("TglBeli")
            Me.columnJamBeli = MyBase.Columns("JamBeli")
            Me.columnTotalItem = MyBase.Columns("TotalItem")
            Me.columnTotalBeli = MyBase.Columns("TotalBeli")
            Me.columnDibayar = MyBase.Columns("Dibayar")
            Me.columnKembali = MyBase.Columns("Kembali")
            Me.columnKodeSupplier = MyBase.Columns("KodeSupplier")
            Me.columnKodeAdmin = MyBase.Columns("KodeAdmin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNoBeli = New Global.System.Data.DataColumn("NoBeli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoBeli)
            Me.columnTglBeli = New Global.System.Data.DataColumn("TglBeli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTglBeli)
            Me.columnJamBeli = New Global.System.Data.DataColumn("JamBeli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJamBeli)
            Me.columnTotalItem = New Global.System.Data.DataColumn("TotalItem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalItem)
            Me.columnTotalBeli = New Global.System.Data.DataColumn("TotalBeli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalBeli)
            Me.columnDibayar = New Global.System.Data.DataColumn("Dibayar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDibayar)
            Me.columnKembali = New Global.System.Data.DataColumn("Kembali", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKembali)
            Me.columnKodeSupplier = New Global.System.Data.DataColumn("KodeSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeSupplier)
            Me.columnKodeAdmin = New Global.System.Data.DataColumn("KodeAdmin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeAdmin)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNoBeli}, true))
            Me.columnNoBeli.AllowDBNull = false
            Me.columnNoBeli.Unique = true
            Me.columnNoBeli.MaxLength = 10
            Me.columnTglBeli.MaxLength = 10
            Me.columnJamBeli.MaxLength = 8
            Me.columnTotalItem.MaxLength = 50
            Me.columnTotalBeli.MaxLength = 50
            Me.columnDibayar.MaxLength = 50
            Me.columnKembali.MaxLength = 50
            Me.columnKodeSupplier.MaxLength = 6
            Me.columnKodeAdmin.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTBL_PEMBELIANRow() As TBL_PEMBELIANRow
            Return CType(Me.NewRow,TBL_PEMBELIANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBL_PEMBELIANRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBL_PEMBELIANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBL_PEMBELIANRowChangedEvent) Is Nothing) Then
                RaiseEvent TBL_PEMBELIANRowChanged(Me, New TBL_PEMBELIANRowChangeEvent(CType(e.Row,TBL_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBL_PEMBELIANRowChangingEvent) Is Nothing) Then
                RaiseEvent TBL_PEMBELIANRowChanging(Me, New TBL_PEMBELIANRowChangeEvent(CType(e.Row,TBL_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBL_PEMBELIANRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBL_PEMBELIANRowDeleted(Me, New TBL_PEMBELIANRowChangeEvent(CType(e.Row,TBL_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBL_PEMBELIANRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBL_PEMBELIANRowDeleting(Me, New TBL_PEMBELIANRowChangeEvent(CType(e.Row,TBL_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTBL_PEMBELIANRow(ByVal row As TBL_PEMBELIANRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBL_PEMBELIANDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBL_PENJUALANDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBL_PENJUALANRow)
        
        Private columnNoJual As Global.System.Data.DataColumn
        
        Private columnTglJual As Global.System.Data.DataColumn
        
        Private columnJamJual As Global.System.Data.DataColumn
        
        Private columnTotalItem As Global.System.Data.DataColumn
        
        Private columnTotalJual As Global.System.Data.DataColumn
        
        Private columnDibayar As Global.System.Data.DataColumn
        
        Private columnKembali As Global.System.Data.DataColumn
        
        Private columnKodeAdmin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBL_PENJUALAN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NoJualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoJual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TglJualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTglJual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property JamJualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJamJual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalItemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalItem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TotalJualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalJual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DibayarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDibayar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KembaliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKembali
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeAdminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeAdmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBL_PENJUALANRow
            Get
                Return CType(Me.Rows(index),TBL_PENJUALANRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PENJUALANRowChanging As TBL_PENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PENJUALANRowChanged As TBL_PENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PENJUALANRowDeleting As TBL_PENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_PENJUALANRowDeleted As TBL_PENJUALANRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTBL_PENJUALANRow(ByVal row As TBL_PENJUALANRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTBL_PENJUALANRow(ByVal NoJual As String, ByVal TglJual As String, ByVal JamJual As String, ByVal TotalItem As String, ByVal TotalJual As String, ByVal Dibayar As String, ByVal Kembali As String, ByVal parentTBL_ADMINRowByFK_TBL_PENJUALAN_TBL_ADMIN As TBL_ADMINRow) As TBL_PENJUALANRow
            Dim rowTBL_PENJUALANRow As TBL_PENJUALANRow = CType(Me.NewRow,TBL_PENJUALANRow)
            Dim columnValuesArray() As Object = New Object() {NoJual, TglJual, JamJual, TotalItem, TotalJual, Dibayar, Kembali, Nothing}
            If (Not (parentTBL_ADMINRowByFK_TBL_PENJUALAN_TBL_ADMIN) Is Nothing) Then
                columnValuesArray(7) = parentTBL_ADMINRowByFK_TBL_PENJUALAN_TBL_ADMIN(0)
            End If
            rowTBL_PENJUALANRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBL_PENJUALANRow)
            Return rowTBL_PENJUALANRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByNoJual(ByVal NoJual As String) As TBL_PENJUALANRow
            Return CType(Me.Rows.Find(New Object() {NoJual}),TBL_PENJUALANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBL_PENJUALANDataTable = CType(MyBase.Clone,TBL_PENJUALANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBL_PENJUALANDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNoJual = MyBase.Columns("NoJual")
            Me.columnTglJual = MyBase.Columns("TglJual")
            Me.columnJamJual = MyBase.Columns("JamJual")
            Me.columnTotalItem = MyBase.Columns("TotalItem")
            Me.columnTotalJual = MyBase.Columns("TotalJual")
            Me.columnDibayar = MyBase.Columns("Dibayar")
            Me.columnKembali = MyBase.Columns("Kembali")
            Me.columnKodeAdmin = MyBase.Columns("KodeAdmin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNoJual = New Global.System.Data.DataColumn("NoJual", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoJual)
            Me.columnTglJual = New Global.System.Data.DataColumn("TglJual", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTglJual)
            Me.columnJamJual = New Global.System.Data.DataColumn("JamJual", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJamJual)
            Me.columnTotalItem = New Global.System.Data.DataColumn("TotalItem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalItem)
            Me.columnTotalJual = New Global.System.Data.DataColumn("TotalJual", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalJual)
            Me.columnDibayar = New Global.System.Data.DataColumn("Dibayar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDibayar)
            Me.columnKembali = New Global.System.Data.DataColumn("Kembali", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKembali)
            Me.columnKodeAdmin = New Global.System.Data.DataColumn("KodeAdmin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeAdmin)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNoJual}, true))
            Me.columnNoJual.AllowDBNull = false
            Me.columnNoJual.Unique = true
            Me.columnNoJual.MaxLength = 10
            Me.columnTglJual.MaxLength = 10
            Me.columnJamJual.MaxLength = 8
            Me.columnTotalItem.MaxLength = 50
            Me.columnTotalJual.MaxLength = 50
            Me.columnDibayar.MaxLength = 50
            Me.columnKembali.MaxLength = 50
            Me.columnKodeAdmin.MaxLength = 6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTBL_PENJUALANRow() As TBL_PENJUALANRow
            Return CType(Me.NewRow,TBL_PENJUALANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBL_PENJUALANRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBL_PENJUALANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBL_PENJUALANRowChangedEvent) Is Nothing) Then
                RaiseEvent TBL_PENJUALANRowChanged(Me, New TBL_PENJUALANRowChangeEvent(CType(e.Row,TBL_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBL_PENJUALANRowChangingEvent) Is Nothing) Then
                RaiseEvent TBL_PENJUALANRowChanging(Me, New TBL_PENJUALANRowChangeEvent(CType(e.Row,TBL_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBL_PENJUALANRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBL_PENJUALANRowDeleted(Me, New TBL_PENJUALANRowChangeEvent(CType(e.Row,TBL_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBL_PENJUALANRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBL_PENJUALANRowDeleting(Me, New TBL_PENJUALANRowChangeEvent(CType(e.Row,TBL_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTBL_PENJUALANRow(ByVal row As TBL_PENJUALANRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBL_PENJUALANDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TBL_SUPPLIERDataTable
        Inherits Global.System.Data.TypedTableBase(Of TBL_SUPPLIERRow)
        
        Private columnKodeSupplier As Global.System.Data.DataColumn
        
        Private columnNamaSupplier As Global.System.Data.DataColumn
        
        Private columnAlamatSupplier As Global.System.Data.DataColumn
        
        Private columnNoTelpSupplier As Global.System.Data.DataColumn
        
        Private columnJenisSupplier As Global.System.Data.DataColumn
        
        Private columnHargaSupplier As Global.System.Data.DataColumn
        
        Private columnStatusSupplier As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TBL_SUPPLIER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property KodeSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKodeSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NamaSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNamaSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property AlamatSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlamatSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property NoTelpSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoTelpSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property JenisSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJenisSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property HargaSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHargaSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StatusSupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TBL_SUPPLIERRow
            Get
                Return CType(Me.Rows(index),TBL_SUPPLIERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_SUPPLIERRowChanging As TBL_SUPPLIERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_SUPPLIERRowChanged As TBL_SUPPLIERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_SUPPLIERRowDeleting As TBL_SUPPLIERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TBL_SUPPLIERRowDeleted As TBL_SUPPLIERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTBL_SUPPLIERRow(ByVal row As TBL_SUPPLIERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTBL_SUPPLIERRow(ByVal KodeSupplier As String, ByVal NamaSupplier As String, ByVal AlamatSupplier As String, ByVal NoTelpSupplier As String, ByVal JenisSupplier As String, ByVal HargaSupplier As Integer, ByVal StatusSupplier As String) As TBL_SUPPLIERRow
            Dim rowTBL_SUPPLIERRow As TBL_SUPPLIERRow = CType(Me.NewRow,TBL_SUPPLIERRow)
            Dim columnValuesArray() As Object = New Object() {KodeSupplier, NamaSupplier, AlamatSupplier, NoTelpSupplier, JenisSupplier, HargaSupplier, StatusSupplier}
            rowTBL_SUPPLIERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTBL_SUPPLIERRow)
            Return rowTBL_SUPPLIERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByKodeSupplier(ByVal KodeSupplier As String) As TBL_SUPPLIERRow
            Return CType(Me.Rows.Find(New Object() {KodeSupplier}),TBL_SUPPLIERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TBL_SUPPLIERDataTable = CType(MyBase.Clone,TBL_SUPPLIERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TBL_SUPPLIERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKodeSupplier = MyBase.Columns("KodeSupplier")
            Me.columnNamaSupplier = MyBase.Columns("NamaSupplier")
            Me.columnAlamatSupplier = MyBase.Columns("AlamatSupplier")
            Me.columnNoTelpSupplier = MyBase.Columns("NoTelpSupplier")
            Me.columnJenisSupplier = MyBase.Columns("JenisSupplier")
            Me.columnHargaSupplier = MyBase.Columns("HargaSupplier")
            Me.columnStatusSupplier = MyBase.Columns("StatusSupplier")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKodeSupplier = New Global.System.Data.DataColumn("KodeSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKodeSupplier)
            Me.columnNamaSupplier = New Global.System.Data.DataColumn("NamaSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNamaSupplier)
            Me.columnAlamatSupplier = New Global.System.Data.DataColumn("AlamatSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlamatSupplier)
            Me.columnNoTelpSupplier = New Global.System.Data.DataColumn("NoTelpSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoTelpSupplier)
            Me.columnJenisSupplier = New Global.System.Data.DataColumn("JenisSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJenisSupplier)
            Me.columnHargaSupplier = New Global.System.Data.DataColumn("HargaSupplier", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHargaSupplier)
            Me.columnStatusSupplier = New Global.System.Data.DataColumn("StatusSupplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusSupplier)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnKodeSupplier}, true))
            Me.columnKodeSupplier.AllowDBNull = false
            Me.columnKodeSupplier.Unique = true
            Me.columnKodeSupplier.MaxLength = 6
            Me.columnNamaSupplier.MaxLength = 50
            Me.columnAlamatSupplier.MaxLength = 50
            Me.columnNoTelpSupplier.MaxLength = 50
            Me.columnJenisSupplier.MaxLength = 50
            Me.columnStatusSupplier.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTBL_SUPPLIERRow() As TBL_SUPPLIERRow
            Return CType(Me.NewRow,TBL_SUPPLIERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TBL_SUPPLIERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TBL_SUPPLIERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TBL_SUPPLIERRowChangedEvent) Is Nothing) Then
                RaiseEvent TBL_SUPPLIERRowChanged(Me, New TBL_SUPPLIERRowChangeEvent(CType(e.Row,TBL_SUPPLIERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TBL_SUPPLIERRowChangingEvent) Is Nothing) Then
                RaiseEvent TBL_SUPPLIERRowChanging(Me, New TBL_SUPPLIERRowChangeEvent(CType(e.Row,TBL_SUPPLIERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TBL_SUPPLIERRowDeletedEvent) Is Nothing) Then
                RaiseEvent TBL_SUPPLIERRowDeleted(Me, New TBL_SUPPLIERRowChangeEvent(CType(e.Row,TBL_SUPPLIERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TBL_SUPPLIERRowDeletingEvent) Is Nothing) Then
                RaiseEvent TBL_SUPPLIERRowDeleting(Me, New TBL_SUPPLIERRowChangeEvent(CType(e.Row,TBL_SUPPLIERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTBL_SUPPLIERRow(ByVal row As TBL_SUPPLIERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DB_FPDataSet1 = New DB_FPDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TBL_SUPPLIERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBL_ADMINRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBL_ADMIN As TBL_ADMINDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBL_ADMIN = CType(Me.Table,TBL_ADMINDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeAdmin() As String
            Get
                Return CType(Me(Me.tableTBL_ADMIN.KodeAdminColumn),String)
            End Get
            Set
                Me(Me.tableTBL_ADMIN.KodeAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NamaAdmin() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_ADMIN.NamaAdminColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NamaAdmin' in table 'TBL_ADMIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_ADMIN.NamaAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PassAdmin() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_ADMIN.PassAdminColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PassAdmin' in table 'TBL_ADMIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_ADMIN.PassAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property LevelAdmin() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_ADMIN.LevelAdminColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LevelAdmin' in table 'TBL_ADMIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_ADMIN.LevelAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNamaAdminNull() As Boolean
            Return Me.IsNull(Me.tableTBL_ADMIN.NamaAdminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNamaAdminNull()
            Me(Me.tableTBL_ADMIN.NamaAdminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPassAdminNull() As Boolean
            Return Me.IsNull(Me.tableTBL_ADMIN.PassAdminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPassAdminNull()
            Me(Me.tableTBL_ADMIN.PassAdminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsLevelAdminNull() As Boolean
            Return Me.IsNull(Me.tableTBL_ADMIN.LevelAdminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetLevelAdminNull()
            Me(Me.tableTBL_ADMIN.LevelAdminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetTBL_PEMBELIANRows() As TBL_PEMBELIANRow()
            If (Me.Table.ChildRelations("FK_TBL_PEMBELIAN_TBL_ADMIN") Is Nothing) Then
                Return New TBL_PEMBELIANRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBL_PEMBELIAN_TBL_ADMIN")),TBL_PEMBELIANRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetTBL_PENJUALANRows() As TBL_PENJUALANRow()
            If (Me.Table.ChildRelations("FK_TBL_PENJUALAN_TBL_ADMIN") Is Nothing) Then
                Return New TBL_PENJUALANRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBL_PENJUALAN_TBL_ADMIN")),TBL_PENJUALANRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBL_DETAILPEMBELIANRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBL_DETAILPEMBELIAN As TBL_DETAILPEMBELIANDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBL_DETAILPEMBELIAN = CType(Me.Table,TBL_DETAILPEMBELIANDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NoBeli() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPEMBELIAN.NoBeliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoBeli' in table 'TBL_DETAILPEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPEMBELIAN.NoBeliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NamaBahan() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPEMBELIAN.NamaBahanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NamaBahan' in table 'TBL_DETAILPEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPEMBELIAN.NamaBahanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HargaBahan() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPEMBELIAN.HargaBahanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HargaBahan' in table 'TBL_DETAILPEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPEMBELIAN.HargaBahanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property JumlahBeli() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPEMBELIAN.JumlahBeliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JumlahBeli' in table 'TBL_DETAILPEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPEMBELIAN.JumlahBeliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Subtotal() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPEMBELIAN.SubtotalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Subtotal' in table 'TBL_DETAILPEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPEMBELIAN.SubtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeMenu() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPEMBELIAN.KodeMenuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KodeMenu' in table 'TBL_DETAILPEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPEMBELIAN.KodeMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TBL_MENUPRODUKRow() As TBL_MENUPRODUKRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK")),TBL_MENUPRODUKRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNoBeliNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPEMBELIAN.NoBeliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNoBeliNull()
            Me(Me.tableTBL_DETAILPEMBELIAN.NoBeliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNamaBahanNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPEMBELIAN.NamaBahanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNamaBahanNull()
            Me(Me.tableTBL_DETAILPEMBELIAN.NamaBahanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHargaBahanNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPEMBELIAN.HargaBahanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHargaBahanNull()
            Me(Me.tableTBL_DETAILPEMBELIAN.HargaBahanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsJumlahBeliNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPEMBELIAN.JumlahBeliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetJumlahBeliNull()
            Me(Me.tableTBL_DETAILPEMBELIAN.JumlahBeliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSubtotalNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPEMBELIAN.SubtotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSubtotalNull()
            Me(Me.tableTBL_DETAILPEMBELIAN.SubtotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKodeMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPEMBELIAN.KodeMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKodeMenuNull()
            Me(Me.tableTBL_DETAILPEMBELIAN.KodeMenuColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBL_DETAILPENJUALANRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBL_DETAILPENJUALAN As TBL_DETAILPENJUALANDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBL_DETAILPENJUALAN = CType(Me.Table,TBL_DETAILPENJUALANDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NoJual() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPENJUALAN.NoJualColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoJual' in table 'TBL_DETAILPENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPENJUALAN.NoJualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeMenu() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPENJUALAN.KodeMenuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KodeMenu' in table 'TBL_DETAILPENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPENJUALAN.KodeMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NamaMenu() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPENJUALAN.NamaMenuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NamaMenu' in table 'TBL_DETAILPENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPENJUALAN.NamaMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HargaMenu() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPENJUALAN.HargaMenuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HargaMenu' in table 'TBL_DETAILPENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPENJUALAN.HargaMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property JumlahJual() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPENJUALAN.JumlahJualColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JumlahJual' in table 'TBL_DETAILPENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPENJUALAN.JumlahJualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SubTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBL_DETAILPENJUALAN.SubTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubTotal' in table 'TBL_DETAILPENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_DETAILPENJUALAN.SubTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TBL_MENUPRODUKRow() As TBL_MENUPRODUKRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK")),TBL_MENUPRODUKRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNoJualNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPENJUALAN.NoJualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNoJualNull()
            Me(Me.tableTBL_DETAILPENJUALAN.NoJualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKodeMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPENJUALAN.KodeMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKodeMenuNull()
            Me(Me.tableTBL_DETAILPENJUALAN.KodeMenuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNamaMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPENJUALAN.NamaMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNamaMenuNull()
            Me(Me.tableTBL_DETAILPENJUALAN.NamaMenuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHargaMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPENJUALAN.HargaMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHargaMenuNull()
            Me(Me.tableTBL_DETAILPENJUALAN.HargaMenuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsJumlahJualNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPENJUALAN.JumlahJualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetJumlahJualNull()
            Me(Me.tableTBL_DETAILPENJUALAN.JumlahJualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSubTotalNull() As Boolean
            Return Me.IsNull(Me.tableTBL_DETAILPENJUALAN.SubTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSubTotalNull()
            Me(Me.tableTBL_DETAILPENJUALAN.SubTotalColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBL_MENUPRODUKRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBL_MENUPRODUK As TBL_MENUPRODUKDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBL_MENUPRODUK = CType(Me.Table,TBL_MENUPRODUKDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeMenu() As String
            Get
                Return CType(Me(Me.tableTBL_MENUPRODUK.KodeMenuColumn),String)
            End Get
            Set
                Me(Me.tableTBL_MENUPRODUK.KodeMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NamaMenu() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_MENUPRODUK.NamaMenuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NamaMenu' in table 'TBL_MENUPRODUK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_MENUPRODUK.NamaMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HargaMenu() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBL_MENUPRODUK.HargaMenuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HargaMenu' in table 'TBL_MENUPRODUK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_MENUPRODUK.HargaMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property JumlahMenu() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBL_MENUPRODUK.JumlahMenuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JumlahMenu' in table 'TBL_MENUPRODUK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_MENUPRODUK.JumlahMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StatusMenu() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_MENUPRODUK.StatusMenuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatusMenu' in table 'TBL_MENUPRODUK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_MENUPRODUK.StatusMenuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNamaMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_MENUPRODUK.NamaMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNamaMenuNull()
            Me(Me.tableTBL_MENUPRODUK.NamaMenuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHargaMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_MENUPRODUK.HargaMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHargaMenuNull()
            Me(Me.tableTBL_MENUPRODUK.HargaMenuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsJumlahMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_MENUPRODUK.JumlahMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetJumlahMenuNull()
            Me(Me.tableTBL_MENUPRODUK.JumlahMenuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStatusMenuNull() As Boolean
            Return Me.IsNull(Me.tableTBL_MENUPRODUK.StatusMenuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStatusMenuNull()
            Me(Me.tableTBL_MENUPRODUK.StatusMenuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetTBL_DETAILPEMBELIANRows() As TBL_DETAILPEMBELIANRow()
            If (Me.Table.ChildRelations("FK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK") Is Nothing) Then
                Return New TBL_DETAILPEMBELIANRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBL_DETAILPEMBELIAN_TBL_MENUPRODUK")),TBL_DETAILPEMBELIANRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetTBL_DETAILPENJUALANRows() As TBL_DETAILPENJUALANRow()
            If (Me.Table.ChildRelations("FK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK") Is Nothing) Then
                Return New TBL_DETAILPENJUALANRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBL_DETAILPENJUALAN_TBL_MENUPRODUK")),TBL_DETAILPENJUALANRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBL_PEMBELIANRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBL_PEMBELIAN As TBL_PEMBELIANDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBL_PEMBELIAN = CType(Me.Table,TBL_PEMBELIANDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NoBeli() As String
            Get
                Return CType(Me(Me.tableTBL_PEMBELIAN.NoBeliColumn),String)
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.NoBeliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TglBeli() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.TglBeliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TglBeli' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.TglBeliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property JamBeli() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.JamBeliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JamBeli' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.JamBeliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalItem() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.TotalItemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalItem' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.TotalItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalBeli() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.TotalBeliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalBeli' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.TotalBeliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Dibayar() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.DibayarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dibayar' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.DibayarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Kembali() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.KembaliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Kembali' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.KembaliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeSupplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.KodeSupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KodeSupplier' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.KodeSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeAdmin() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PEMBELIAN.KodeAdminColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KodeAdmin' in table 'TBL_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PEMBELIAN.KodeAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TBL_ADMINRow() As TBL_ADMINRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBL_PEMBELIAN_TBL_ADMIN")),TBL_ADMINRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBL_PEMBELIAN_TBL_ADMIN"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TBL_SUPPLIERRow() As TBL_SUPPLIERRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBL_PEMBELIAN_TBL_SUPPLIER")),TBL_SUPPLIERRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBL_PEMBELIAN_TBL_SUPPLIER"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTglBeliNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.TglBeliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTglBeliNull()
            Me(Me.tableTBL_PEMBELIAN.TglBeliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsJamBeliNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.JamBeliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetJamBeliNull()
            Me(Me.tableTBL_PEMBELIAN.JamBeliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalItemNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.TotalItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalItemNull()
            Me(Me.tableTBL_PEMBELIAN.TotalItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalBeliNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.TotalBeliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalBeliNull()
            Me(Me.tableTBL_PEMBELIAN.TotalBeliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDibayarNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.DibayarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDibayarNull()
            Me(Me.tableTBL_PEMBELIAN.DibayarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKembaliNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.KembaliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKembaliNull()
            Me(Me.tableTBL_PEMBELIAN.KembaliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKodeSupplierNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.KodeSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKodeSupplierNull()
            Me(Me.tableTBL_PEMBELIAN.KodeSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKodeAdminNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PEMBELIAN.KodeAdminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKodeAdminNull()
            Me(Me.tableTBL_PEMBELIAN.KodeAdminColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBL_PENJUALANRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBL_PENJUALAN As TBL_PENJUALANDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBL_PENJUALAN = CType(Me.Table,TBL_PENJUALANDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NoJual() As String
            Get
                Return CType(Me(Me.tableTBL_PENJUALAN.NoJualColumn),String)
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.NoJualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TglJual() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PENJUALAN.TglJualColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TglJual' in table 'TBL_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.TglJualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property JamJual() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PENJUALAN.JamJualColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JamJual' in table 'TBL_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.JamJualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalItem() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PENJUALAN.TotalItemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalItem' in table 'TBL_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.TotalItemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TotalJual() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PENJUALAN.TotalJualColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalJual' in table 'TBL_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.TotalJualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Dibayar() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PENJUALAN.DibayarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dibayar' in table 'TBL_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.DibayarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Kembali() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PENJUALAN.KembaliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Kembali' in table 'TBL_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.KembaliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeAdmin() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_PENJUALAN.KodeAdminColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KodeAdmin' in table 'TBL_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_PENJUALAN.KodeAdminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TBL_ADMINRow() As TBL_ADMINRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TBL_PENJUALAN_TBL_ADMIN")),TBL_ADMINRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TBL_PENJUALAN_TBL_ADMIN"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTglJualNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PENJUALAN.TglJualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTglJualNull()
            Me(Me.tableTBL_PENJUALAN.TglJualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsJamJualNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PENJUALAN.JamJualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetJamJualNull()
            Me(Me.tableTBL_PENJUALAN.JamJualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalItemNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PENJUALAN.TotalItemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalItemNull()
            Me(Me.tableTBL_PENJUALAN.TotalItemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTotalJualNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PENJUALAN.TotalJualColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTotalJualNull()
            Me(Me.tableTBL_PENJUALAN.TotalJualColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDibayarNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PENJUALAN.DibayarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDibayarNull()
            Me(Me.tableTBL_PENJUALAN.DibayarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKembaliNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PENJUALAN.KembaliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKembaliNull()
            Me(Me.tableTBL_PENJUALAN.KembaliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsKodeAdminNull() As Boolean
            Return Me.IsNull(Me.tableTBL_PENJUALAN.KodeAdminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetKodeAdminNull()
            Me(Me.tableTBL_PENJUALAN.KodeAdminColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TBL_SUPPLIERRow
        Inherits Global.System.Data.DataRow
        
        Private tableTBL_SUPPLIER As TBL_SUPPLIERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTBL_SUPPLIER = CType(Me.Table,TBL_SUPPLIERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property KodeSupplier() As String
            Get
                Return CType(Me(Me.tableTBL_SUPPLIER.KodeSupplierColumn),String)
            End Get
            Set
                Me(Me.tableTBL_SUPPLIER.KodeSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NamaSupplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_SUPPLIER.NamaSupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NamaSupplier' in table 'TBL_SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_SUPPLIER.NamaSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property AlamatSupplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_SUPPLIER.AlamatSupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlamatSupplier' in table 'TBL_SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_SUPPLIER.AlamatSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property NoTelpSupplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_SUPPLIER.NoTelpSupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoTelpSupplier' in table 'TBL_SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_SUPPLIER.NoTelpSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property JenisSupplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_SUPPLIER.JenisSupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JenisSupplier' in table 'TBL_SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_SUPPLIER.JenisSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property HargaSupplier() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTBL_SUPPLIER.HargaSupplierColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HargaSupplier' in table 'TBL_SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_SUPPLIER.HargaSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StatusSupplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableTBL_SUPPLIER.StatusSupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatusSupplier' in table 'TBL_SUPPLIER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTBL_SUPPLIER.StatusSupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNamaSupplierNull() As Boolean
            Return Me.IsNull(Me.tableTBL_SUPPLIER.NamaSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNamaSupplierNull()
            Me(Me.tableTBL_SUPPLIER.NamaSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsAlamatSupplierNull() As Boolean
            Return Me.IsNull(Me.tableTBL_SUPPLIER.AlamatSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetAlamatSupplierNull()
            Me(Me.tableTBL_SUPPLIER.AlamatSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsNoTelpSupplierNull() As Boolean
            Return Me.IsNull(Me.tableTBL_SUPPLIER.NoTelpSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetNoTelpSupplierNull()
            Me(Me.tableTBL_SUPPLIER.NoTelpSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsJenisSupplierNull() As Boolean
            Return Me.IsNull(Me.tableTBL_SUPPLIER.JenisSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetJenisSupplierNull()
            Me(Me.tableTBL_SUPPLIER.JenisSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsHargaSupplierNull() As Boolean
            Return Me.IsNull(Me.tableTBL_SUPPLIER.HargaSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetHargaSupplierNull()
            Me(Me.tableTBL_SUPPLIER.HargaSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStatusSupplierNull() As Boolean
            Return Me.IsNull(Me.tableTBL_SUPPLIER.StatusSupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStatusSupplierNull()
            Me(Me.tableTBL_SUPPLIER.StatusSupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetTBL_PEMBELIANRows() As TBL_PEMBELIANRow()
            If (Me.Table.ChildRelations("FK_TBL_PEMBELIAN_TBL_SUPPLIER") Is Nothing) Then
                Return New TBL_PEMBELIANRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TBL_PEMBELIAN_TBL_SUPPLIER")),TBL_PEMBELIANRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TBL_ADMINRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBL_ADMINRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TBL_ADMINRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TBL_ADMINRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TBL_DETAILPEMBELIANRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBL_DETAILPEMBELIANRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TBL_DETAILPEMBELIANRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TBL_DETAILPEMBELIANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TBL_DETAILPENJUALANRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBL_DETAILPENJUALANRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TBL_DETAILPENJUALANRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TBL_DETAILPENJUALANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TBL_MENUPRODUKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBL_MENUPRODUKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TBL_MENUPRODUKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TBL_MENUPRODUKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TBL_PEMBELIANRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBL_PEMBELIANRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TBL_PEMBELIANRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TBL_PEMBELIANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TBL_PENJUALANRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBL_PENJUALANRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TBL_PENJUALANRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TBL_PENJUALANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TBL_SUPPLIERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TBL_SUPPLIERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TBL_SUPPLIERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TBL_SUPPLIERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DB_FPDataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBL_ADMINTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBL_ADMIN"
            tableMapping.ColumnMappings.Add("KodeAdmin", "KodeAdmin")
            tableMapping.ColumnMappings.Add("NamaAdmin", "NamaAdmin")
            tableMapping.ColumnMappings.Add("PassAdmin", "PassAdmin")
            tableMapping.ColumnMappings.Add("LevelAdmin", "LevelAdmin")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBL_ADMIN] WHERE (([KodeAdmin] = @Original_KodeAdmin) AND ((@I"& _ 
                "sNull_NamaAdmin = 1 AND [NamaAdmin] IS NULL) OR ([NamaAdmin] = @Original_NamaAdm"& _ 
                "in)) AND ((@IsNull_PassAdmin = 1 AND [PassAdmin] IS NULL) OR ([PassAdmin] = @Ori"& _ 
                "ginal_PassAdmin)) AND ((@IsNull_LevelAdmin = 1 AND [LevelAdmin] IS NULL) OR ([Le"& _ 
                "velAdmin] = @Original_LevelAdmin)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NamaAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NamaAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NamaAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_PassAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "PassAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_PassAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PassAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_LevelAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "LevelAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_LevelAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LevelAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_ADMIN] ([KodeAdmin], [NamaAdmin], [PassAdmin], [LevelAdmin"& _ 
                "]) VALUES (@KodeAdmin, @NamaAdmin, @PassAdmin, @LevelAdmin);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KodeAdmin, "& _ 
                "NamaAdmin, PassAdmin, LevelAdmin FROM TBL_ADMIN WHERE (KodeAdmin = @KodeAdmin)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaAdmin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@PassAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PassAdmin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@LevelAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LevelAdmin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_ADMIN] SET [KodeAdmin] = @KodeAdmin, [NamaAdmin] = @NamaAdmin, "& _ 
                "[PassAdmin] = @PassAdmin, [LevelAdmin] = @LevelAdmin WHERE (([KodeAdmin] = @Orig"& _ 
                "inal_KodeAdmin) AND ((@IsNull_NamaAdmin = 1 AND [NamaAdmin] IS NULL) OR ([NamaAd"& _ 
                "min] = @Original_NamaAdmin)) AND ((@IsNull_PassAdmin = 1 AND [PassAdmin] IS NULL"& _ 
                ") OR ([PassAdmin] = @Original_PassAdmin)) AND ((@IsNull_LevelAdmin = 1 AND [Leve"& _ 
                "lAdmin] IS NULL) OR ([LevelAdmin] = @Original_LevelAdmin)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KodeAdmin, "& _ 
                "NamaAdmin, PassAdmin, LevelAdmin FROM TBL_ADMIN WHERE (KodeAdmin = @KodeAdmin)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaAdmin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@PassAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PassAdmin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@LevelAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LevelAdmin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NamaAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NamaAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NamaAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_PassAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "PassAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_PassAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "PassAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_LevelAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "LevelAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_LevelAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "LevelAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.FP_Pemdesk_E_Kelompok_5.My.MySettings.Default.DB_FPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT KodeAdmin, NamaAdmin, PassAdmin, LevelAdmin FROM dbo.TBL_ADMIN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_FPDataSet1.TBL_ADMINDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_FPDataSet1.TBL_ADMINDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_FPDataSet1.TBL_ADMINDataTable = New DB_FPDataSet1.TBL_ADMINDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_FPDataSet1.TBL_ADMINDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_FPDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TBL_ADMIN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_KodeAdmin As String, ByVal Original_NamaAdmin As String, ByVal Original_PassAdmin As String, ByVal Original_LevelAdmin As String) As Integer
            If (Original_KodeAdmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_KodeAdmin")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_KodeAdmin,String)
            End If
            If (Original_NamaAdmin Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NamaAdmin,String)
            End If
            If (Original_PassAdmin Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_PassAdmin,String)
            End If
            If (Original_LevelAdmin Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_LevelAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal KodeAdmin As String, ByVal NamaAdmin As String, ByVal PassAdmin As String, ByVal LevelAdmin As String) As Integer
            If (KodeAdmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("KodeAdmin")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(KodeAdmin,String)
            End If
            If (NamaAdmin Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NamaAdmin,String)
            End If
            If (PassAdmin Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PassAdmin,String)
            End If
            If (LevelAdmin Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LevelAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal KodeAdmin As String, ByVal NamaAdmin As String, ByVal PassAdmin As String, ByVal LevelAdmin As String, ByVal Original_KodeAdmin As String, ByVal Original_NamaAdmin As String, ByVal Original_PassAdmin As String, ByVal Original_LevelAdmin As String) As Integer
            If (KodeAdmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("KodeAdmin")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(KodeAdmin,String)
            End If
            If (NamaAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NamaAdmin,String)
            End If
            If (PassAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PassAdmin,String)
            End If
            If (LevelAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(LevelAdmin,String)
            End If
            If (Original_KodeAdmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_KodeAdmin")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_KodeAdmin,String)
            End If
            If (Original_NamaAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_NamaAdmin,String)
            End If
            If (Original_PassAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_PassAdmin,String)
            End If
            If (Original_LevelAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_LevelAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NamaAdmin As String, ByVal PassAdmin As String, ByVal LevelAdmin As String, ByVal Original_KodeAdmin As String, ByVal Original_NamaAdmin As String, ByVal Original_PassAdmin As String, ByVal Original_LevelAdmin As String) As Integer
            Return Me.Update(Original_KodeAdmin, NamaAdmin, PassAdmin, LevelAdmin, Original_KodeAdmin, Original_NamaAdmin, Original_PassAdmin, Original_LevelAdmin)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBL_DETAILPEMBELIANTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBL_DETAILPEMBELIAN"
            tableMapping.ColumnMappings.Add("NoBeli", "NoBeli")
            tableMapping.ColumnMappings.Add("NamaBahan", "NamaBahan")
            tableMapping.ColumnMappings.Add("HargaBahan", "HargaBahan")
            tableMapping.ColumnMappings.Add("JumlahBeli", "JumlahBeli")
            tableMapping.ColumnMappings.Add("Subtotal", "Subtotal")
            tableMapping.ColumnMappings.Add("KodeMenu", "KodeMenu")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_DETAILPEMBELIAN] ([NoBeli], [NamaBahan], [HargaBahan], [Ju"& _ 
                "mlahBeli], [Subtotal], [KodeMenu]) VALUES (@NoBeli, @NamaBahan, @HargaBahan, @Ju"& _ 
                "mlahBeli, @Subtotal, @KodeMenu)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBeli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaBahan"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaBahan"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@HargaBahan"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "HargaBahan"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JumlahBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JumlahBeli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Subtotal"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Subtotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.FP_Pemdesk_E_Kelompok_5.My.MySettings.Default.DB_FPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NoBeli, NamaBahan, HargaBahan, JumlahBeli, Subtotal, KodeMenu FROM dbo.TBL"& _ 
                "_DETAILPEMBELIAN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_FPDataSet1.TBL_DETAILPEMBELIANDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_FPDataSet1.TBL_DETAILPEMBELIANDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_FPDataSet1.TBL_DETAILPEMBELIANDataTable = New DB_FPDataSet1.TBL_DETAILPEMBELIANDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_FPDataSet1.TBL_DETAILPEMBELIANDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_FPDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TBL_DETAILPEMBELIAN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NoBeli As String, ByVal NamaBahan As String, ByVal HargaBahan As String, ByVal JumlahBeli As String, ByVal Subtotal As String, ByVal KodeMenu As String) As Integer
            If (NoBeli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NoBeli,String)
            End If
            If (NamaBahan Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NamaBahan,String)
            End If
            If (HargaBahan Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HargaBahan,String)
            End If
            If (JumlahBeli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(JumlahBeli,String)
            End If
            If (Subtotal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Subtotal,String)
            End If
            If (KodeMenu Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(KodeMenu,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBL_DETAILPENJUALANTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBL_DETAILPENJUALAN"
            tableMapping.ColumnMappings.Add("NoJual", "NoJual")
            tableMapping.ColumnMappings.Add("KodeMenu", "KodeMenu")
            tableMapping.ColumnMappings.Add("NamaMenu", "NamaMenu")
            tableMapping.ColumnMappings.Add("HargaMenu", "HargaMenu")
            tableMapping.ColumnMappings.Add("JumlahJual", "JumlahJual")
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_DETAILPENJUALAN] ([NoJual], [KodeMenu], [NamaMenu], [Harga"& _ 
                "Menu], [JumlahJual], [SubTotal]) VALUES (@NoJual, @KodeMenu, @NamaMenu, @HargaMe"& _ 
                "nu, @JumlahJual, @SubTotal)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoJual"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@HargaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JumlahJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JumlahJual"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@SubTotal"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "SubTotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.FP_Pemdesk_E_Kelompok_5.My.MySettings.Default.DB_FPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NoJual, KodeMenu, NamaMenu, HargaMenu, JumlahJual, SubTotal FROM dbo.TBL_D"& _ 
                "ETAILPENJUALAN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_FPDataSet1.TBL_DETAILPENJUALANDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_FPDataSet1.TBL_DETAILPENJUALANDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_FPDataSet1.TBL_DETAILPENJUALANDataTable = New DB_FPDataSet1.TBL_DETAILPENJUALANDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_FPDataSet1.TBL_DETAILPENJUALANDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_FPDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TBL_DETAILPENJUALAN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NoJual As String, ByVal KodeMenu As String, ByVal NamaMenu As String, ByVal HargaMenu As Global.System.Nullable(Of Integer), ByVal JumlahJual As Global.System.Nullable(Of Integer), ByVal SubTotal As Global.System.Nullable(Of Integer)) As Integer
            If (NoJual Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NoJual,String)
            End If
            If (KodeMenu Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(KodeMenu,String)
            End If
            If (NamaMenu Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(NamaMenu,String)
            End If
            If (HargaMenu.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(HargaMenu.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (JumlahJual.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(JumlahJual.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SubTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SubTotal.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBL_MENUPRODUKTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBL_MENUPRODUK"
            tableMapping.ColumnMappings.Add("KodeMenu", "KodeMenu")
            tableMapping.ColumnMappings.Add("NamaMenu", "NamaMenu")
            tableMapping.ColumnMappings.Add("HargaMenu", "HargaMenu")
            tableMapping.ColumnMappings.Add("JumlahMenu", "JumlahMenu")
            tableMapping.ColumnMappings.Add("StatusMenu", "StatusMenu")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBL_MENUPRODUK] WHERE (([KodeMenu] = @Original_KodeMenu) AND ("& _ 
                "(@IsNull_NamaMenu = 1 AND [NamaMenu] IS NULL) OR ([NamaMenu] = @Original_NamaMen"& _ 
                "u)) AND ((@IsNull_HargaMenu = 1 AND [HargaMenu] IS NULL) OR ([HargaMenu] = @Orig"& _ 
                "inal_HargaMenu)) AND ((@IsNull_JumlahMenu = 1 AND [JumlahMenu] IS NULL) OR ([Jum"& _ 
                "lahMenu] = @Original_JumlahMenu)) AND ((@IsNull_StatusMenu = 1 AND [StatusMenu] "& _ 
                "IS NULL) OR ([StatusMenu] = @Original_StatusMenu)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NamaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NamaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NamaMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_HargaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_HargaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JumlahMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JumlahMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JumlahMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JumlahMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_StatusMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "StatusMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_StatusMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_MENUPRODUK] ([KodeMenu], [NamaMenu], [HargaMenu], [JumlahM"& _ 
                "enu], [StatusMenu]) VALUES (@KodeMenu, @NamaMenu, @HargaMenu, @JumlahMenu, @Stat"& _ 
                "usMenu);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KodeMenu, NamaMenu, HargaMenu, JumlahMenu, StatusMenu FROM TBL_"& _ 
                "MENUPRODUK WHERE (KodeMenu = @KodeMenu)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@HargaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JumlahMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JumlahMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@StatusMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusMenu"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_MENUPRODUK] SET [KodeMenu] = @KodeMenu, [NamaMenu] = @NamaMenu,"& _ 
                " [HargaMenu] = @HargaMenu, [JumlahMenu] = @JumlahMenu, [StatusMenu] = @StatusMen"& _ 
                "u WHERE (([KodeMenu] = @Original_KodeMenu) AND ((@IsNull_NamaMenu = 1 AND [NamaM"& _ 
                "enu] IS NULL) OR ([NamaMenu] = @Original_NamaMenu)) AND ((@IsNull_HargaMenu = 1 "& _ 
                "AND [HargaMenu] IS NULL) OR ([HargaMenu] = @Original_HargaMenu)) AND ((@IsNull_J"& _ 
                "umlahMenu = 1 AND [JumlahMenu] IS NULL) OR ([JumlahMenu] = @Original_JumlahMenu)"& _ 
                ") AND ((@IsNull_StatusMenu = 1 AND [StatusMenu] IS NULL) OR ([StatusMenu] = @Ori"& _ 
                "ginal_StatusMenu)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KodeMenu, NamaMenu, HargaMenu, JumlahMenu, StatusMe"& _ 
                "nu FROM TBL_MENUPRODUK WHERE (KodeMenu = @KodeMenu)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeMenu"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaMenu"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@HargaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaMenu"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JumlahMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JumlahMenu"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@StatusMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusMenu"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NamaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NamaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NamaMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_HargaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_HargaMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JumlahMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JumlahMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JumlahMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JumlahMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_StatusMenu"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "StatusMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_StatusMenu"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusMenu"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.FP_Pemdesk_E_Kelompok_5.My.MySettings.Default.DB_FPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT KodeMenu, NamaMenu, HargaMenu, JumlahMenu, StatusMenu FROM dbo.TBL_MENUPRO"& _ 
                "DUK"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_FPDataSet1.TBL_MENUPRODUKDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_FPDataSet1.TBL_MENUPRODUKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_FPDataSet1.TBL_MENUPRODUKDataTable = New DB_FPDataSet1.TBL_MENUPRODUKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_FPDataSet1.TBL_MENUPRODUKDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_FPDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TBL_MENUPRODUK")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_KodeMenu As String, ByVal Original_NamaMenu As String, ByVal Original_HargaMenu As Global.System.Nullable(Of Integer), ByVal Original_JumlahMenu As Global.System.Nullable(Of Integer), ByVal Original_StatusMenu As String) As Integer
            If (Original_KodeMenu Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_KodeMenu")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_KodeMenu,String)
            End If
            If (Original_NamaMenu Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NamaMenu,String)
            End If
            If (Original_HargaMenu.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_HargaMenu.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_JumlahMenu.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_JumlahMenu.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_StatusMenu Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_StatusMenu,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal KodeMenu As String, ByVal NamaMenu As String, ByVal HargaMenu As Global.System.Nullable(Of Integer), ByVal JumlahMenu As Global.System.Nullable(Of Integer), ByVal StatusMenu As String) As Integer
            If (KodeMenu Is Nothing) Then
                Throw New Global.System.ArgumentNullException("KodeMenu")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(KodeMenu,String)
            End If
            If (NamaMenu Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NamaMenu,String)
            End If
            If (HargaMenu.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(HargaMenu.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (JumlahMenu.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(JumlahMenu.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (StatusMenu Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(StatusMenu,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal KodeMenu As String, ByVal NamaMenu As String, ByVal HargaMenu As Global.System.Nullable(Of Integer), ByVal JumlahMenu As Global.System.Nullable(Of Integer), ByVal StatusMenu As String, ByVal Original_KodeMenu As String, ByVal Original_NamaMenu As String, ByVal Original_HargaMenu As Global.System.Nullable(Of Integer), ByVal Original_JumlahMenu As Global.System.Nullable(Of Integer), ByVal Original_StatusMenu As String) As Integer
            If (KodeMenu Is Nothing) Then
                Throw New Global.System.ArgumentNullException("KodeMenu")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(KodeMenu,String)
            End If
            If (NamaMenu Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NamaMenu,String)
            End If
            If (HargaMenu.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(HargaMenu.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (JumlahMenu.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(JumlahMenu.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (StatusMenu Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(StatusMenu,String)
            End If
            If (Original_KodeMenu Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_KodeMenu")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_KodeMenu,String)
            End If
            If (Original_NamaMenu Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_NamaMenu,String)
            End If
            If (Original_HargaMenu.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_HargaMenu.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_JumlahMenu.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_JumlahMenu.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_StatusMenu Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_StatusMenu,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NamaMenu As String, ByVal HargaMenu As Global.System.Nullable(Of Integer), ByVal JumlahMenu As Global.System.Nullable(Of Integer), ByVal StatusMenu As String, ByVal Original_KodeMenu As String, ByVal Original_NamaMenu As String, ByVal Original_HargaMenu As Global.System.Nullable(Of Integer), ByVal Original_JumlahMenu As Global.System.Nullable(Of Integer), ByVal Original_StatusMenu As String) As Integer
            Return Me.Update(Original_KodeMenu, NamaMenu, HargaMenu, JumlahMenu, StatusMenu, Original_KodeMenu, Original_NamaMenu, Original_HargaMenu, Original_JumlahMenu, Original_StatusMenu)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBL_PEMBELIANTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBL_PEMBELIAN"
            tableMapping.ColumnMappings.Add("NoBeli", "NoBeli")
            tableMapping.ColumnMappings.Add("TglBeli", "TglBeli")
            tableMapping.ColumnMappings.Add("JamBeli", "JamBeli")
            tableMapping.ColumnMappings.Add("TotalItem", "TotalItem")
            tableMapping.ColumnMappings.Add("TotalBeli", "TotalBeli")
            tableMapping.ColumnMappings.Add("Dibayar", "Dibayar")
            tableMapping.ColumnMappings.Add("Kembali", "Kembali")
            tableMapping.ColumnMappings.Add("KodeSupplier", "KodeSupplier")
            tableMapping.ColumnMappings.Add("KodeAdmin", "KodeAdmin")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBL_PEMBELIAN] WHERE (([NoBeli] = @Original_NoBeli) AND ((@IsN"& _ 
                "ull_TglBeli = 1 AND [TglBeli] IS NULL) OR ([TglBeli] = @Original_TglBeli)) AND ("& _ 
                "(@IsNull_JamBeli = 1 AND [JamBeli] IS NULL) OR ([JamBeli] = @Original_JamBeli)) "& _ 
                "AND ((@IsNull_TotalItem = 1 AND [TotalItem] IS NULL) OR ([TotalItem] = @Original"& _ 
                "_TotalItem)) AND ((@IsNull_TotalBeli = 1 AND [TotalBeli] IS NULL) OR ([TotalBeli"& _ 
                "] = @Original_TotalBeli)) AND ((@IsNull_Dibayar = 1 AND [Dibayar] IS NULL) OR (["& _ 
                "Dibayar] = @Original_Dibayar)) AND ((@IsNull_Kembali = 1 AND [Kembali] IS NULL) "& _ 
                "OR ([Kembali] = @Original_Kembali)) AND ((@IsNull_KodeSupplier = 1 AND [KodeSupp"& _ 
                "lier] IS NULL) OR ([KodeSupplier] = @Original_KodeSupplier)) AND ((@IsNull_KodeA"& _ 
                "dmin = 1 AND [KodeAdmin] IS NULL) OR ([KodeAdmin] = @Original_KodeAdmin)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NoBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TglBeli"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TglBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TglBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JamBeli"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JamBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JamBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalItem"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalBeli"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Dibayar"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Kembali"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_KodeSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_KodeAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_PEMBELIAN] ([NoBeli], [TglBeli], [JamBeli], [TotalItem], ["& _ 
                "TotalBeli], [Dibayar], [Kembali], [KodeSupplier], [KodeAdmin]) VALUES (@NoBeli, "& _ 
                "@TglBeli, @JamBeli, @TotalItem, @TotalBeli, @Dibayar, @Kembali, @KodeSupplier, @"& _ 
                "KodeAdmin);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NoBeli, TglBeli, JamBeli, TotalItem, TotalBeli, Dibayar, Kem"& _ 
                "bali, KodeSupplier, KodeAdmin FROM TBL_PEMBELIAN WHERE (NoBeli = @NoBeli)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBeli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TglBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglBeli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JamBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamBeli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalBeli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_PEMBELIAN] SET [NoBeli] = @NoBeli, [TglBeli] = @TglBeli, [JamBe"& _ 
                "li] = @JamBeli, [TotalItem] = @TotalItem, [TotalBeli] = @TotalBeli, [Dibayar] = "& _ 
                "@Dibayar, [Kembali] = @Kembali, [KodeSupplier] = @KodeSupplier, [KodeAdmin] = @K"& _ 
                "odeAdmin WHERE (([NoBeli] = @Original_NoBeli) AND ((@IsNull_TglBeli = 1 AND [Tgl"& _ 
                "Beli] IS NULL) OR ([TglBeli] = @Original_TglBeli)) AND ((@IsNull_JamBeli = 1 AND"& _ 
                " [JamBeli] IS NULL) OR ([JamBeli] = @Original_JamBeli)) AND ((@IsNull_TotalItem "& _ 
                "= 1 AND [TotalItem] IS NULL) OR ([TotalItem] = @Original_TotalItem)) AND ((@IsNu"& _ 
                "ll_TotalBeli = 1 AND [TotalBeli] IS NULL) OR ([TotalBeli] = @Original_TotalBeli)"& _ 
                ") AND ((@IsNull_Dibayar = 1 AND [Dibayar] IS NULL) OR ([Dibayar] = @Original_Dib"& _ 
                "ayar)) AND ((@IsNull_Kembali = 1 AND [Kembali] IS NULL) OR ([Kembali] = @Origina"& _ 
                "l_Kembali)) AND ((@IsNull_KodeSupplier = 1 AND [KodeSupplier] IS NULL) OR ([Kode"& _ 
                "Supplier] = @Original_KodeSupplier)) AND ((@IsNull_KodeAdmin = 1 AND [KodeAdmin]"& _ 
                " IS NULL) OR ([KodeAdmin] = @Original_KodeAdmin)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NoBeli, TglBeli, Jam"& _ 
                "Beli, TotalItem, TotalBeli, Dibayar, Kembali, KodeSupplier, KodeAdmin FROM TBL_P"& _ 
                "EMBELIAN WHERE (NoBeli = @NoBeli)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBeli"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TglBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglBeli"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JamBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamBeli"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalBeli"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NoBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TglBeli"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TglBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TglBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JamBeli"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JamBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JamBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalItem"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalBeli"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalBeli"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalBeli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Dibayar"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Kembali"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_KodeSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_KodeAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.FP_Pemdesk_E_Kelompok_5.My.MySettings.Default.DB_FPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NoBeli, TglBeli, JamBeli, TotalItem, TotalBeli, Dibayar, Kembali, KodeSupp"& _ 
                "lier, KodeAdmin FROM dbo.TBL_PEMBELIAN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_FPDataSet1.TBL_PEMBELIANDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_FPDataSet1.TBL_PEMBELIANDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_FPDataSet1.TBL_PEMBELIANDataTable = New DB_FPDataSet1.TBL_PEMBELIANDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_FPDataSet1.TBL_PEMBELIANDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_FPDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TBL_PEMBELIAN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_NoBeli As String, ByVal Original_TglBeli As String, ByVal Original_JamBeli As String, ByVal Original_TotalItem As String, ByVal Original_TotalBeli As String, ByVal Original_Dibayar As String, ByVal Original_Kembali As String, ByVal Original_KodeSupplier As String, ByVal Original_KodeAdmin As String) As Integer
            If (Original_NoBeli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoBeli")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_NoBeli,String)
            End If
            If (Original_TglBeli Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TglBeli,String)
            End If
            If (Original_JamBeli Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_JamBeli,String)
            End If
            If (Original_TotalItem Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TotalItem,String)
            End If
            If (Original_TotalBeli Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TotalBeli,String)
            End If
            If (Original_Dibayar Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Dibayar,String)
            End If
            If (Original_Kembali Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Kembali,String)
            End If
            If (Original_KodeSupplier Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_KodeSupplier,String)
            End If
            If (Original_KodeAdmin Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_KodeAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NoBeli As String, ByVal TglBeli As String, ByVal JamBeli As String, ByVal TotalItem As String, ByVal TotalBeli As String, ByVal Dibayar As String, ByVal Kembali As String, ByVal KodeSupplier As String, ByVal KodeAdmin As String) As Integer
            If (NoBeli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoBeli")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NoBeli,String)
            End If
            If (TglBeli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TglBeli,String)
            End If
            If (JamBeli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(JamBeli,String)
            End If
            If (TotalItem Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TotalItem,String)
            End If
            If (TotalBeli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TotalBeli,String)
            End If
            If (Dibayar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Dibayar,String)
            End If
            If (Kembali Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Kembali,String)
            End If
            If (KodeSupplier Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(KodeSupplier,String)
            End If
            If (KodeAdmin Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(KodeAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NoBeli As String,  _
                    ByVal TglBeli As String,  _
                    ByVal JamBeli As String,  _
                    ByVal TotalItem As String,  _
                    ByVal TotalBeli As String,  _
                    ByVal Dibayar As String,  _
                    ByVal Kembali As String,  _
                    ByVal KodeSupplier As String,  _
                    ByVal KodeAdmin As String,  _
                    ByVal Original_NoBeli As String,  _
                    ByVal Original_TglBeli As String,  _
                    ByVal Original_JamBeli As String,  _
                    ByVal Original_TotalItem As String,  _
                    ByVal Original_TotalBeli As String,  _
                    ByVal Original_Dibayar As String,  _
                    ByVal Original_Kembali As String,  _
                    ByVal Original_KodeSupplier As String,  _
                    ByVal Original_KodeAdmin As String) As Integer
            If (NoBeli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoBeli")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NoBeli,String)
            End If
            If (TglBeli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TglBeli,String)
            End If
            If (JamBeli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(JamBeli,String)
            End If
            If (TotalItem Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TotalItem,String)
            End If
            If (TotalBeli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TotalBeli,String)
            End If
            If (Dibayar Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Dibayar,String)
            End If
            If (Kembali Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Kembali,String)
            End If
            If (KodeSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(KodeSupplier,String)
            End If
            If (KodeAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(KodeAdmin,String)
            End If
            If (Original_NoBeli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoBeli")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_NoBeli,String)
            End If
            If (Original_TglBeli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_TglBeli,String)
            End If
            If (Original_JamBeli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_JamBeli,String)
            End If
            If (Original_TotalItem Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_TotalItem,String)
            End If
            If (Original_TotalBeli Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_TotalBeli,String)
            End If
            If (Original_Dibayar Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Dibayar,String)
            End If
            If (Original_Kembali Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_Kembali,String)
            End If
            If (Original_KodeSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_KodeSupplier,String)
            End If
            If (Original_KodeAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_KodeAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TglBeli As String,  _
                    ByVal JamBeli As String,  _
                    ByVal TotalItem As String,  _
                    ByVal TotalBeli As String,  _
                    ByVal Dibayar As String,  _
                    ByVal Kembali As String,  _
                    ByVal KodeSupplier As String,  _
                    ByVal KodeAdmin As String,  _
                    ByVal Original_NoBeli As String,  _
                    ByVal Original_TglBeli As String,  _
                    ByVal Original_JamBeli As String,  _
                    ByVal Original_TotalItem As String,  _
                    ByVal Original_TotalBeli As String,  _
                    ByVal Original_Dibayar As String,  _
                    ByVal Original_Kembali As String,  _
                    ByVal Original_KodeSupplier As String,  _
                    ByVal Original_KodeAdmin As String) As Integer
            Return Me.Update(Original_NoBeli, TglBeli, JamBeli, TotalItem, TotalBeli, Dibayar, Kembali, KodeSupplier, KodeAdmin, Original_NoBeli, Original_TglBeli, Original_JamBeli, Original_TotalItem, Original_TotalBeli, Original_Dibayar, Original_Kembali, Original_KodeSupplier, Original_KodeAdmin)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBL_PENJUALANTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBL_PENJUALAN"
            tableMapping.ColumnMappings.Add("NoJual", "NoJual")
            tableMapping.ColumnMappings.Add("TglJual", "TglJual")
            tableMapping.ColumnMappings.Add("JamJual", "JamJual")
            tableMapping.ColumnMappings.Add("TotalItem", "TotalItem")
            tableMapping.ColumnMappings.Add("TotalJual", "TotalJual")
            tableMapping.ColumnMappings.Add("Dibayar", "Dibayar")
            tableMapping.ColumnMappings.Add("Kembali", "Kembali")
            tableMapping.ColumnMappings.Add("KodeAdmin", "KodeAdmin")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBL_PENJUALAN] WHERE (([NoJual] = @Original_NoJual) AND ((@IsN"& _ 
                "ull_TglJual = 1 AND [TglJual] IS NULL) OR ([TglJual] = @Original_TglJual)) AND ("& _ 
                "(@IsNull_JamJual = 1 AND [JamJual] IS NULL) OR ([JamJual] = @Original_JamJual)) "& _ 
                "AND ((@IsNull_TotalItem = 1 AND [TotalItem] IS NULL) OR ([TotalItem] = @Original"& _ 
                "_TotalItem)) AND ((@IsNull_TotalJual = 1 AND [TotalJual] IS NULL) OR ([TotalJual"& _ 
                "] = @Original_TotalJual)) AND ((@IsNull_Dibayar = 1 AND [Dibayar] IS NULL) OR (["& _ 
                "Dibayar] = @Original_Dibayar)) AND ((@IsNull_Kembali = 1 AND [Kembali] IS NULL) "& _ 
                "OR ([Kembali] = @Original_Kembali)) AND ((@IsNull_KodeAdmin = 1 AND [KodeAdmin] "& _ 
                "IS NULL) OR ([KodeAdmin] = @Original_KodeAdmin)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NoJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TglJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TglJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TglJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JamJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JamJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JamJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalItem"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Dibayar"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Kembali"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_KodeAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_PENJUALAN] ([NoJual], [TglJual], [JamJual], [TotalItem], ["& _ 
                "TotalJual], [Dibayar], [Kembali], [KodeAdmin]) VALUES (@NoJual, @TglJual, @JamJu"& _ 
                "al, @TotalItem, @TotalJual, @Dibayar, @Kembali, @KodeAdmin);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NoJual, Tgl"& _ 
                "Jual, JamJual, TotalItem, TotalJual, Dibayar, Kembali, KodeAdmin FROM TBL_PENJUA"& _ 
                "LAN WHERE (NoJual = @NoJual)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoJual"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TglJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglJual"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JamJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamJual"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_PENJUALAN] SET [NoJual] = @NoJual, [TglJual] = @TglJual, [JamJu"& _ 
                "al] = @JamJual, [TotalItem] = @TotalItem, [TotalJual] = @TotalJual, [Dibayar] = "& _ 
                "@Dibayar, [Kembali] = @Kembali, [KodeAdmin] = @KodeAdmin WHERE (([NoJual] = @Ori"& _ 
                "ginal_NoJual) AND ((@IsNull_TglJual = 1 AND [TglJual] IS NULL) OR ([TglJual] = @"& _ 
                "Original_TglJual)) AND ((@IsNull_JamJual = 1 AND [JamJual] IS NULL) OR ([JamJual"& _ 
                "] = @Original_JamJual)) AND ((@IsNull_TotalItem = 1 AND [TotalItem] IS NULL) OR "& _ 
                "([TotalItem] = @Original_TotalItem)) AND ((@IsNull_TotalJual = 1 AND [TotalJual]"& _ 
                " IS NULL) OR ([TotalJual] = @Original_TotalJual)) AND ((@IsNull_Dibayar = 1 AND "& _ 
                "[Dibayar] IS NULL) OR ([Dibayar] = @Original_Dibayar)) AND ((@IsNull_Kembali = 1"& _ 
                " AND [Kembali] IS NULL) OR ([Kembali] = @Original_Kembali)) AND ((@IsNull_KodeAd"& _ 
                "min = 1 AND [KodeAdmin] IS NULL) OR ([KodeAdmin] = @Original_KodeAdmin)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT NoJual, TglJual, JamJual, TotalItem, TotalJual, Dibayar, Kembali, KodeAdmin F"& _ 
                "ROM TBL_PENJUALAN WHERE (NoJual = @NoJual)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoJual"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TglJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglJual"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JamJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamJual"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@TotalJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NoJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TglJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TglJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TglJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TglJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JamJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JamJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JamJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JamJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalItem"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalItem"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalItem"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_TotalJual"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_TotalJual"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "TotalJual"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Dibayar"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Dibayar"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Dibayar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_Kembali"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_Kembali"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "Kembali"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_KodeAdmin"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeAdmin"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeAdmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.FP_Pemdesk_E_Kelompok_5.My.MySettings.Default.DB_FPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NoJual, TglJual, JamJual, TotalItem, TotalJual, Dibayar, Kembali, KodeAdmi"& _ 
                "n FROM dbo.TBL_PENJUALAN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_FPDataSet1.TBL_PENJUALANDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_FPDataSet1.TBL_PENJUALANDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_FPDataSet1.TBL_PENJUALANDataTable = New DB_FPDataSet1.TBL_PENJUALANDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_FPDataSet1.TBL_PENJUALANDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_FPDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TBL_PENJUALAN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_NoJual As String, ByVal Original_TglJual As String, ByVal Original_JamJual As String, ByVal Original_TotalItem As String, ByVal Original_TotalJual As String, ByVal Original_Dibayar As String, ByVal Original_Kembali As String, ByVal Original_KodeAdmin As String) As Integer
            If (Original_NoJual Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoJual")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_NoJual,String)
            End If
            If (Original_TglJual Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TglJual,String)
            End If
            If (Original_JamJual Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_JamJual,String)
            End If
            If (Original_TotalItem Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TotalItem,String)
            End If
            If (Original_TotalJual Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TotalJual,String)
            End If
            If (Original_Dibayar Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Dibayar,String)
            End If
            If (Original_Kembali Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Kembali,String)
            End If
            If (Original_KodeAdmin Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_KodeAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NoJual As String, ByVal TglJual As String, ByVal JamJual As String, ByVal TotalItem As String, ByVal TotalJual As String, ByVal Dibayar As String, ByVal Kembali As String, ByVal KodeAdmin As String) As Integer
            If (NoJual Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoJual")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NoJual,String)
            End If
            If (TglJual Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TglJual,String)
            End If
            If (JamJual Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(JamJual,String)
            End If
            If (TotalItem Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TotalItem,String)
            End If
            If (TotalJual Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TotalJual,String)
            End If
            If (Dibayar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Dibayar,String)
            End If
            If (Kembali Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Kembali,String)
            End If
            If (KodeAdmin Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(KodeAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NoJual As String,  _
                    ByVal TglJual As String,  _
                    ByVal JamJual As String,  _
                    ByVal TotalItem As String,  _
                    ByVal TotalJual As String,  _
                    ByVal Dibayar As String,  _
                    ByVal Kembali As String,  _
                    ByVal KodeAdmin As String,  _
                    ByVal Original_NoJual As String,  _
                    ByVal Original_TglJual As String,  _
                    ByVal Original_JamJual As String,  _
                    ByVal Original_TotalItem As String,  _
                    ByVal Original_TotalJual As String,  _
                    ByVal Original_Dibayar As String,  _
                    ByVal Original_Kembali As String,  _
                    ByVal Original_KodeAdmin As String) As Integer
            If (NoJual Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NoJual")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NoJual,String)
            End If
            If (TglJual Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TglJual,String)
            End If
            If (JamJual Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(JamJual,String)
            End If
            If (TotalItem Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TotalItem,String)
            End If
            If (TotalJual Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TotalJual,String)
            End If
            If (Dibayar Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Dibayar,String)
            End If
            If (Kembali Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Kembali,String)
            End If
            If (KodeAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(KodeAdmin,String)
            End If
            If (Original_NoJual Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NoJual")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_NoJual,String)
            End If
            If (Original_TglJual Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_TglJual,String)
            End If
            If (Original_JamJual Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_JamJual,String)
            End If
            If (Original_TotalItem Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_TotalItem,String)
            End If
            If (Original_TotalJual Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_TotalJual,String)
            End If
            If (Original_Dibayar Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_Dibayar,String)
            End If
            If (Original_Kembali Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Kembali,String)
            End If
            If (Original_KodeAdmin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_KodeAdmin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal TglJual As String, ByVal JamJual As String, ByVal TotalItem As String, ByVal TotalJual As String, ByVal Dibayar As String, ByVal Kembali As String, ByVal KodeAdmin As String, ByVal Original_NoJual As String, ByVal Original_TglJual As String, ByVal Original_JamJual As String, ByVal Original_TotalItem As String, ByVal Original_TotalJual As String, ByVal Original_Dibayar As String, ByVal Original_Kembali As String, ByVal Original_KodeAdmin As String) As Integer
            Return Me.Update(Original_NoJual, TglJual, JamJual, TotalItem, TotalJual, Dibayar, Kembali, KodeAdmin, Original_NoJual, Original_TglJual, Original_JamJual, Original_TotalItem, Original_TotalJual, Original_Dibayar, Original_Kembali, Original_KodeAdmin)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TBL_SUPPLIERTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.Microsoft.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.Microsoft.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.Microsoft.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.Microsoft.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.Microsoft.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.Microsoft.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.Microsoft.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.Microsoft.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.Microsoft.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TBL_SUPPLIER"
            tableMapping.ColumnMappings.Add("KodeSupplier", "KodeSupplier")
            tableMapping.ColumnMappings.Add("NamaSupplier", "NamaSupplier")
            tableMapping.ColumnMappings.Add("AlamatSupplier", "AlamatSupplier")
            tableMapping.ColumnMappings.Add("NoTelpSupplier", "NoTelpSupplier")
            tableMapping.ColumnMappings.Add("JenisSupplier", "JenisSupplier")
            tableMapping.ColumnMappings.Add("HargaSupplier", "HargaSupplier")
            tableMapping.ColumnMappings.Add("StatusSupplier", "StatusSupplier")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TBL_SUPPLIER] WHERE (([KodeSupplier] = @Original_KodeSupplier)"& _ 
                " AND ((@IsNull_NamaSupplier = 1 AND [NamaSupplier] IS NULL) OR ([NamaSupplier] ="& _ 
                " @Original_NamaSupplier)) AND ((@IsNull_AlamatSupplier = 1 AND [AlamatSupplier] "& _ 
                "IS NULL) OR ([AlamatSupplier] = @Original_AlamatSupplier)) AND ((@IsNull_NoTelpS"& _ 
                "upplier = 1 AND [NoTelpSupplier] IS NULL) OR ([NoTelpSupplier] = @Original_NoTel"& _ 
                "pSupplier)) AND ((@IsNull_JenisSupplier = 1 AND [JenisSupplier] IS NULL) OR ([Je"& _ 
                "nisSupplier] = @Original_JenisSupplier)) AND ((@IsNull_HargaSupplier = 1 AND [Ha"& _ 
                "rgaSupplier] IS NULL) OR ([HargaSupplier] = @Original_HargaSupplier)) AND ((@IsN"& _ 
                "ull_StatusSupplier = 1 AND [StatusSupplier] IS NULL) OR ([StatusSupplier] = @Ori"& _ 
                "ginal_StatusSupplier)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.Microsoft.Data.SqlClient.SqlParameter = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NamaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NamaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NamaSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_AlamatSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "AlamatSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_AlamatSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlamatSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NoTelpSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NoTelpSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NoTelpSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTelpSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JenisSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JenisSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JenisSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JenisSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_HargaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_HargaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_StatusSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "StatusSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_StatusSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TBL_SUPPLIER] ([KodeSupplier], [NamaSupplier], [AlamatSupplier"& _ 
                "], [NoTelpSupplier], [JenisSupplier], [HargaSupplier], [StatusSupplier]) VALUES "& _ 
                "(@KodeSupplier, @NamaSupplier, @AlamatSupplier, @NoTelpSupplier, @JenisSupplier,"& _ 
                " @HargaSupplier, @StatusSupplier);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KodeSupplier, NamaSupplier, AlamatSup"& _ 
                "plier, NoTelpSupplier, JenisSupplier, HargaSupplier, StatusSupplier FROM TBL_SUP"& _ 
                "PLIER WHERE (KodeSupplier = @KodeSupplier)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@AlamatSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlamatSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoTelpSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTelpSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JenisSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JenisSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@HargaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@StatusSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusSupplier"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TBL_SUPPLIER] SET [KodeSupplier] = @KodeSupplier, [NamaSupplier] = "& _ 
                "@NamaSupplier, [AlamatSupplier] = @AlamatSupplier, [NoTelpSupplier] = @NoTelpSup"& _ 
                "plier, [JenisSupplier] = @JenisSupplier, [HargaSupplier] = @HargaSupplier, [Stat"& _ 
                "usSupplier] = @StatusSupplier WHERE (([KodeSupplier] = @Original_KodeSupplier) A"& _ 
                "ND ((@IsNull_NamaSupplier = 1 AND [NamaSupplier] IS NULL) OR ([NamaSupplier] = @"& _ 
                "Original_NamaSupplier)) AND ((@IsNull_AlamatSupplier = 1 AND [AlamatSupplier] IS"& _ 
                " NULL) OR ([AlamatSupplier] = @Original_AlamatSupplier)) AND ((@IsNull_NoTelpSup"& _ 
                "plier = 1 AND [NoTelpSupplier] IS NULL) OR ([NoTelpSupplier] = @Original_NoTelpS"& _ 
                "upplier)) AND ((@IsNull_JenisSupplier = 1 AND [JenisSupplier] IS NULL) OR ([Jeni"& _ 
                "sSupplier] = @Original_JenisSupplier)) AND ((@IsNull_HargaSupplier = 1 AND [Harg"& _ 
                "aSupplier] IS NULL) OR ([HargaSupplier] = @Original_HargaSupplier)) AND ((@IsNul"& _ 
                "l_StatusSupplier = 1 AND [StatusSupplier] IS NULL) OR ([StatusSupplier] = @Origi"& _ 
                "nal_StatusSupplier)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT KodeSupplier, NamaSupplier, AlamatSupplier, NoTel"& _ 
                "pSupplier, JenisSupplier, HargaSupplier, StatusSupplier FROM TBL_SUPPLIER WHERE "& _ 
                "(KodeSupplier = @KodeSupplier)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NamaSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@AlamatSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlamatSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@NoTelpSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTelpSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@JenisSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JenisSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@HargaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@StatusSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusSupplier"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_KodeSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "KodeSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NamaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NamaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NamaSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NamaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_AlamatSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "AlamatSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_AlamatSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "AlamatSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_NoTelpSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "NoTelpSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_NoTelpSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "NoTelpSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_JenisSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "JenisSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_JenisSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "JenisSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_HargaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_HargaSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "HargaSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@IsNull_StatusSupplier"
            param.DbType = Global.System.Data.DbType.Int32
            param.SqlDbType = Global.System.Data.SqlDbType.Int
            param.IsNullable = true
            param.SourceColumn = "StatusSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.Microsoft.Data.SqlClient.SqlParameter()
            param.ParameterName = "@Original_StatusSupplier"
            param.DbType = Global.System.Data.DbType.AnsiString
            param.SqlDbType = Global.System.Data.SqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "StatusSupplier"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.Microsoft.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.FP_Pemdesk_E_Kelompok_5.My.MySettings.Default.DB_FPConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.Microsoft.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.Microsoft.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT KodeSupplier, NamaSupplier, AlamatSupplier, NoTelpSupplier, JenisSupplier,"& _ 
                " HargaSupplier, StatusSupplier FROM dbo.TBL_SUPPLIER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_FPDataSet1.TBL_SUPPLIERDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_FPDataSet1.TBL_SUPPLIERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_FPDataSet1.TBL_SUPPLIERDataTable = New DB_FPDataSet1.TBL_SUPPLIERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_FPDataSet1.TBL_SUPPLIERDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_FPDataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "TBL_SUPPLIER")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_KodeSupplier As String, ByVal Original_NamaSupplier As String, ByVal Original_AlamatSupplier As String, ByVal Original_NoTelpSupplier As String, ByVal Original_JenisSupplier As String, ByVal Original_HargaSupplier As Global.System.Nullable(Of Integer), ByVal Original_StatusSupplier As String) As Integer
            If (Original_KodeSupplier Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_KodeSupplier")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_KodeSupplier,String)
            End If
            If (Original_NamaSupplier Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NamaSupplier,String)
            End If
            If (Original_AlamatSupplier Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_AlamatSupplier,String)
            End If
            If (Original_NoTelpSupplier Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NoTelpSupplier,String)
            End If
            If (Original_JenisSupplier Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_JenisSupplier,String)
            End If
            If (Original_HargaSupplier.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_HargaSupplier.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_StatusSupplier Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_StatusSupplier,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal KodeSupplier As String, ByVal NamaSupplier As String, ByVal AlamatSupplier As String, ByVal NoTelpSupplier As String, ByVal JenisSupplier As String, ByVal HargaSupplier As Global.System.Nullable(Of Integer), ByVal StatusSupplier As String) As Integer
            If (KodeSupplier Is Nothing) Then
                Throw New Global.System.ArgumentNullException("KodeSupplier")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(KodeSupplier,String)
            End If
            If (NamaSupplier Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NamaSupplier,String)
            End If
            If (AlamatSupplier Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AlamatSupplier,String)
            End If
            If (NoTelpSupplier Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NoTelpSupplier,String)
            End If
            If (JenisSupplier Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(JenisSupplier,String)
            End If
            If (HargaSupplier.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(HargaSupplier.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (StatusSupplier Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(StatusSupplier,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal KodeSupplier As String, ByVal NamaSupplier As String, ByVal AlamatSupplier As String, ByVal NoTelpSupplier As String, ByVal JenisSupplier As String, ByVal HargaSupplier As Global.System.Nullable(Of Integer), ByVal StatusSupplier As String, ByVal Original_KodeSupplier As String, ByVal Original_NamaSupplier As String, ByVal Original_AlamatSupplier As String, ByVal Original_NoTelpSupplier As String, ByVal Original_JenisSupplier As String, ByVal Original_HargaSupplier As Global.System.Nullable(Of Integer), ByVal Original_StatusSupplier As String) As Integer
            If (KodeSupplier Is Nothing) Then
                Throw New Global.System.ArgumentNullException("KodeSupplier")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(KodeSupplier,String)
            End If
            If (NamaSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NamaSupplier,String)
            End If
            If (AlamatSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AlamatSupplier,String)
            End If
            If (NoTelpSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NoTelpSupplier,String)
            End If
            If (JenisSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(JenisSupplier,String)
            End If
            If (HargaSupplier.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(HargaSupplier.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (StatusSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(StatusSupplier,String)
            End If
            If (Original_KodeSupplier Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_KodeSupplier")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_KodeSupplier,String)
            End If
            If (Original_NamaSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_NamaSupplier,String)
            End If
            If (Original_AlamatSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_AlamatSupplier,String)
            End If
            If (Original_NoTelpSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_NoTelpSupplier,String)
            End If
            If (Original_JenisSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_JenisSupplier,String)
            End If
            If (Original_HargaSupplier.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_HargaSupplier.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_StatusSupplier Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_StatusSupplier,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NamaSupplier As String, ByVal AlamatSupplier As String, ByVal NoTelpSupplier As String, ByVal JenisSupplier As String, ByVal HargaSupplier As Global.System.Nullable(Of Integer), ByVal StatusSupplier As String, ByVal Original_KodeSupplier As String, ByVal Original_NamaSupplier As String, ByVal Original_AlamatSupplier As String, ByVal Original_NoTelpSupplier As String, ByVal Original_JenisSupplier As String, ByVal Original_HargaSupplier As Global.System.Nullable(Of Integer), ByVal Original_StatusSupplier As String) As Integer
            Return Me.Update(Original_KodeSupplier, NamaSupplier, AlamatSupplier, NoTelpSupplier, JenisSupplier, HargaSupplier, StatusSupplier, Original_KodeSupplier, Original_NamaSupplier, Original_AlamatSupplier, Original_NoTelpSupplier, Original_JenisSupplier, Original_HargaSupplier, Original_StatusSupplier)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tBL_ADMINTableAdapter As TBL_ADMINTableAdapter
        
        Private _tBL_DETAILPEMBELIANTableAdapter As TBL_DETAILPEMBELIANTableAdapter
        
        Private _tBL_DETAILPENJUALANTableAdapter As TBL_DETAILPENJUALANTableAdapter
        
        Private _tBL_MENUPRODUKTableAdapter As TBL_MENUPRODUKTableAdapter
        
        Private _tBL_PEMBELIANTableAdapter As TBL_PEMBELIANTableAdapter
        
        Private _tBL_PENJUALANTableAdapter As TBL_PENJUALANTableAdapter
        
        Private _tBL_SUPPLIERTableAdapter As TBL_SUPPLIERTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBL_ADMINTableAdapter() As TBL_ADMINTableAdapter
            Get
                Return Me._tBL_ADMINTableAdapter
            End Get
            Set
                Me._tBL_ADMINTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBL_DETAILPEMBELIANTableAdapter() As TBL_DETAILPEMBELIANTableAdapter
            Get
                Return Me._tBL_DETAILPEMBELIANTableAdapter
            End Get
            Set
                Me._tBL_DETAILPEMBELIANTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBL_DETAILPENJUALANTableAdapter() As TBL_DETAILPENJUALANTableAdapter
            Get
                Return Me._tBL_DETAILPENJUALANTableAdapter
            End Get
            Set
                Me._tBL_DETAILPENJUALANTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBL_MENUPRODUKTableAdapter() As TBL_MENUPRODUKTableAdapter
            Get
                Return Me._tBL_MENUPRODUKTableAdapter
            End Get
            Set
                Me._tBL_MENUPRODUKTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBL_PEMBELIANTableAdapter() As TBL_PEMBELIANTableAdapter
            Get
                Return Me._tBL_PEMBELIANTableAdapter
            End Get
            Set
                Me._tBL_PEMBELIANTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBL_PENJUALANTableAdapter() As TBL_PENJUALANTableAdapter
            Get
                Return Me._tBL_PENJUALANTableAdapter
            End Get
            Set
                Me._tBL_PENJUALANTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TBL_SUPPLIERTableAdapter() As TBL_SUPPLIERTableAdapter
            Get
                Return Me._tBL_SUPPLIERTableAdapter
            End Get
            Set
                Me._tBL_SUPPLIERTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tBL_ADMINTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBL_ADMINTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBL_ADMINTableAdapter.Connection
                End If
                If ((Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBL_DETAILPEMBELIANTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBL_DETAILPEMBELIANTableAdapter.Connection
                End If
                If ((Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBL_DETAILPENJUALANTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBL_DETAILPENJUALANTableAdapter.Connection
                End If
                If ((Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBL_MENUPRODUKTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBL_MENUPRODUKTableAdapter.Connection
                End If
                If ((Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBL_PEMBELIANTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBL_PEMBELIANTableAdapter.Connection
                End If
                If ((Not (Me._tBL_PENJUALANTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBL_PENJUALANTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBL_PENJUALANTableAdapter.Connection
                End If
                If ((Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tBL_SUPPLIERTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tBL_SUPPLIERTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tBL_ADMINTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBL_PENJUALANTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DB_FPDataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tBL_ADMINTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBL_ADMIN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBL_ADMINTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBL_MENUPRODUK.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBL_MENUPRODUKTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBL_SUPPLIER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBL_SUPPLIERTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBL_DETAILPEMBELIAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBL_DETAILPEMBELIANTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBL_DETAILPENJUALAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBL_DETAILPENJUALANTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBL_PEMBELIAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBL_PEMBELIANTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tBL_PENJUALANTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TBL_PENJUALAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tBL_PENJUALANTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DB_FPDataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tBL_ADMINTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBL_ADMIN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBL_ADMINTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBL_MENUPRODUK.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBL_MENUPRODUKTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBL_SUPPLIER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBL_SUPPLIERTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBL_DETAILPEMBELIAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBL_DETAILPEMBELIANTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBL_DETAILPENJUALAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBL_DETAILPENJUALANTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBL_PEMBELIAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBL_PEMBELIANTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tBL_PENJUALANTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TBL_PENJUALAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tBL_PENJUALANTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DB_FPDataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tBL_PENJUALANTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBL_PENJUALAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBL_PENJUALANTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBL_PEMBELIAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBL_PEMBELIANTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBL_DETAILPENJUALAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBL_DETAILPENJUALANTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBL_DETAILPEMBELIAN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBL_DETAILPEMBELIANTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBL_SUPPLIER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBL_SUPPLIERTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBL_MENUPRODUK.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBL_MENUPRODUKTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tBL_ADMINTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TBL_ADMIN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tBL_ADMINTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DB_FPDataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tBL_ADMINTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBL_ADMINTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBL_DETAILPEMBELIANTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBL_DETAILPENJUALANTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBL_MENUPRODUKTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBL_PEMBELIANTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBL_PENJUALANTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBL_PENJUALANTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tBL_SUPPLIERTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tBL_ADMINTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBL_ADMINTableAdapter, Me._tBL_ADMINTableAdapter.Connection)
                    Me._tBL_ADMINTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_ADMINTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._tBL_ADMINTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBL_ADMINTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBL_ADMINTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBL_DETAILPEMBELIANTableAdapter, Me._tBL_DETAILPEMBELIANTableAdapter.Connection)
                    Me._tBL_DETAILPEMBELIANTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_DETAILPEMBELIANTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._tBL_DETAILPEMBELIANTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBL_DETAILPEMBELIANTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBL_DETAILPEMBELIANTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBL_DETAILPENJUALANTableAdapter, Me._tBL_DETAILPENJUALANTableAdapter.Connection)
                    Me._tBL_DETAILPENJUALANTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_DETAILPENJUALANTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._tBL_DETAILPENJUALANTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBL_DETAILPENJUALANTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBL_DETAILPENJUALANTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBL_MENUPRODUKTableAdapter, Me._tBL_MENUPRODUKTableAdapter.Connection)
                    Me._tBL_MENUPRODUKTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_MENUPRODUKTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._tBL_MENUPRODUKTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBL_MENUPRODUKTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBL_MENUPRODUKTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBL_PEMBELIANTableAdapter, Me._tBL_PEMBELIANTableAdapter.Connection)
                    Me._tBL_PEMBELIANTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_PEMBELIANTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._tBL_PEMBELIANTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBL_PEMBELIANTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBL_PEMBELIANTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBL_PENJUALANTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBL_PENJUALANTableAdapter, Me._tBL_PENJUALANTableAdapter.Connection)
                    Me._tBL_PENJUALANTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_PENJUALANTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._tBL_PENJUALANTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBL_PENJUALANTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBL_PENJUALANTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tBL_SUPPLIERTableAdapter, Me._tBL_SUPPLIERTableAdapter.Connection)
                    Me._tBL_SUPPLIERTableAdapter.Connection = CType(workConnection,Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_SUPPLIERTableAdapter.Transaction = CType(workTransaction,Global.Microsoft.Data.SqlClient.SqlTransaction)
                    If Me._tBL_SUPPLIERTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tBL_SUPPLIERTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tBL_SUPPLIERTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tBL_ADMINTableAdapter) Is Nothing) Then
                    Me._tBL_ADMINTableAdapter.Connection = CType(revertConnections(Me._tBL_ADMINTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_ADMINTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBL_DETAILPEMBELIANTableAdapter) Is Nothing) Then
                    Me._tBL_DETAILPEMBELIANTableAdapter.Connection = CType(revertConnections(Me._tBL_DETAILPEMBELIANTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_DETAILPEMBELIANTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBL_DETAILPENJUALANTableAdapter) Is Nothing) Then
                    Me._tBL_DETAILPENJUALANTableAdapter.Connection = CType(revertConnections(Me._tBL_DETAILPENJUALANTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_DETAILPENJUALANTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBL_MENUPRODUKTableAdapter) Is Nothing) Then
                    Me._tBL_MENUPRODUKTableAdapter.Connection = CType(revertConnections(Me._tBL_MENUPRODUKTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_MENUPRODUKTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBL_PEMBELIANTableAdapter) Is Nothing) Then
                    Me._tBL_PEMBELIANTableAdapter.Connection = CType(revertConnections(Me._tBL_PEMBELIANTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_PEMBELIANTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBL_PENJUALANTableAdapter) Is Nothing) Then
                    Me._tBL_PENJUALANTableAdapter.Connection = CType(revertConnections(Me._tBL_PENJUALANTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_PENJUALANTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tBL_SUPPLIERTableAdapter) Is Nothing) Then
                    Me._tBL_SUPPLIERTableAdapter.Connection = CType(revertConnections(Me._tBL_SUPPLIERTableAdapter),Global.Microsoft.Data.SqlClient.SqlConnection)
                    Me._tBL_SUPPLIERTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
